{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\devis\\\\Downloads\\\\react-rpg.com-master\\\\src\\\\features\\\\game-menus\\\\game-music\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Sound from 'react-sound';\nimport AmbientMusic from './ambient-music.mp3';\nimport setGameSound from '../actions/set-game-sound';\nimport gameSoundEnabled from '../actions/game-sound-enabled';\nimport './styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameMusic = _ref => {\n  _s();\n  let {\n    sideMenu,\n    gameSoundEnabled,\n    setGameSound\n  } = _ref;\n  const [gameMusic, setGameMusic] = useState(null);\n  useEffect(() => {\n    window.addEventListener('mousedown', handleKeyPress);\n    window.addEventListener('keydown', handleKeyPress);\n    window.addEventListener('focus', handleFocus);\n    // window.addEventListener('blur', handleBlur);\n    return () => {\n      window.removeEventListener('mousedown', handleKeyPress);\n      window.removeEventListener('keydown', handleKeyPress);\n      window.removeEventListener('focus', handleFocus);\n      // window.removeEventListener('blur', handleBlur);\n    };\n  }, []);\n  function handleKeyPress() {\n    // we have to load music only have user has clicked or pressed a key\n    // chrome disables auto play until user has interacted with window\n    if (gameSoundEnabled()) {\n      setGameMusic(/*#__PURE__*/_jsxDEV(Sound, {\n        url: AmbientMusic,\n        playStatus: 'PLAYING',\n        autoLoad: true,\n        loop: true,\n        volume: 50\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this));\n    }\n    // now we no longer need our key or mouse event listeners\n    window.removeEventListener('mousedown', handleKeyPress);\n    window.removeEventListener('keydown', handleKeyPress);\n  }\n  function toggleMusic() {\n    if (gameMusic) {\n      turnOffSound();\n    } else {\n      turnOnSound();\n    }\n  }\n  function handleFocus() {\n    // make sure the player has music enabled before turning it back on\n    if (gameSoundEnabled()) {\n      turnOnSound();\n    }\n  }\n\n  /*function handleBlur() {\n        // during blur, don't change the sound redux state, just turn off music\n        setGameMusic(null);\n    }*/\n\n  function turnOffSound() {\n    setGameMusic(null);\n    setGameSound(false);\n  }\n  function turnOnSound() {\n    setGameMusic(/*#__PURE__*/_jsxDEV(Sound, {\n      url: AmbientMusic,\n      playStatus: 'PLAYING',\n      autoLoad: true,\n      loop: true,\n      volume: 50\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this));\n    setGameSound(true);\n  }\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"game-music__button white-border\",\n    onClick: toggleMusic,\n    style: {\n      marginTop: sideMenu ? 0 : 10\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-music__diagonal-line--1\",\n      style: {\n        width: gameMusic ? 0 : 57,\n        top: gameMusic ? 0 : 18,\n        left: gameMusic ? 0 : -7\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-music__diagonal-line--2\",\n      style: {\n        width: gameMusic ? 0 : 57,\n        top: gameMusic ? 0 : 18,\n        right: gameMusic ? 0 : -7\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n      className: `fa fa-${gameMusic ? 'volume-up' : 'volume-off'} game-music__icon`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), gameMusic]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(GameMusic, \"lWpWWUb/WPsgH9wRa3WUSzkmzq4=\");\n_c = GameMusic;\nconst actions = {\n  gameSoundEnabled,\n  setGameSound\n};\nexport default connect(null, actions)(GameMusic);\nvar _c;\n$RefreshReg$(_c, \"GameMusic\");","map":{"version":3,"names":["React","useState","useEffect","connect","Sound","AmbientMusic","setGameSound","gameSoundEnabled","jsxDEV","_jsxDEV","GameMusic","_ref","_s","sideMenu","gameMusic","setGameMusic","window","addEventListener","handleKeyPress","handleFocus","removeEventListener","url","playStatus","autoLoad","loop","volume","fileName","_jsxFileName","lineNumber","columnNumber","toggleMusic","turnOffSound","turnOnSound","className","onClick","style","marginTop","children","width","top","left","right","_c","actions","$RefreshReg$"],"sources":["C:/Users/devis/Downloads/react-rpg.com-master/src/features/game-menus/game-music/index.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Sound from 'react-sound';\n\nimport AmbientMusic from './ambient-music.mp3';\nimport setGameSound from '../actions/set-game-sound';\nimport gameSoundEnabled from '../actions/game-sound-enabled';\n\nimport './styles.scss';\n\nconst GameMusic = ({ sideMenu, gameSoundEnabled, setGameSound }) => {\n  const [gameMusic, setGameMusic] = useState(null);\n\n  useEffect(() => {\n    window.addEventListener('mousedown', handleKeyPress);\n    window.addEventListener('keydown', handleKeyPress);\n    window.addEventListener('focus', handleFocus);\n    // window.addEventListener('blur', handleBlur);\n    return () => {\n      window.removeEventListener('mousedown', handleKeyPress);\n      window.removeEventListener('keydown', handleKeyPress);\n      window.removeEventListener('focus', handleFocus);\n      // window.removeEventListener('blur', handleBlur);\n    };\n  }, []);\n\n  function handleKeyPress() {\n    // we have to load music only have user has clicked or pressed a key\n    // chrome disables auto play until user has interacted with window\n    if (gameSoundEnabled()) {\n      setGameMusic(\n        <Sound url={AmbientMusic} playStatus={'PLAYING'} autoLoad={true} loop={true} volume={50} />\n      );\n    }\n    // now we no longer need our key or mouse event listeners\n    window.removeEventListener('mousedown', handleKeyPress);\n    window.removeEventListener('keydown', handleKeyPress);\n  }\n\n  function toggleMusic() {\n    if (gameMusic) {\n      turnOffSound();\n    } else {\n      turnOnSound();\n    }\n  }\n\n  function handleFocus() {\n    // make sure the player has music enabled before turning it back on\n    if (gameSoundEnabled()) {\n      turnOnSound();\n    }\n  }\n\n  /*function handleBlur() {\n        // during blur, don't change the sound redux state, just turn off music\n        setGameMusic(null);\n    }*/\n\n  function turnOffSound() {\n    setGameMusic(null);\n    setGameSound(false);\n  }\n\n  function turnOnSound() {\n    setGameMusic(\n      <Sound url={AmbientMusic} playStatus={'PLAYING'} autoLoad={true} loop={true} volume={50} />\n    );\n    setGameSound(true);\n  }\n\n  return (\n    <button\n      className=\"game-music__button white-border\"\n      onClick={toggleMusic}\n      style={{ marginTop: sideMenu ? 0 : 10 }}\n    >\n      <div\n        className=\"game-music__diagonal-line--1\"\n        style={{\n          width: gameMusic ? 0 : 57,\n          top: gameMusic ? 0 : 18,\n          left: gameMusic ? 0 : -7,\n        }}\n      ></div>\n      <div\n        className=\"game-music__diagonal-line--2\"\n        style={{\n          width: gameMusic ? 0 : 57,\n          top: gameMusic ? 0 : 18,\n          right: gameMusic ? 0 : -7,\n        }}\n      ></div>\n\n      <i className={`fa fa-${gameMusic ? 'volume-up' : 'volume-off'} game-music__icon`} />\n\n      {gameMusic}\n    </button>\n  );\n};\n\nconst actions = { gameSoundEnabled, setGameSound };\n\nexport default connect(null, actions)(GameMusic);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}