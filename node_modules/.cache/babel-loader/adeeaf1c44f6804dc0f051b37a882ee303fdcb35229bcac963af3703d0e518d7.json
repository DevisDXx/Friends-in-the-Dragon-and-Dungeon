{"ast":null,"code":"import { BASE_HEALTH, MIN_HEALTH_BONUS } from '../config/constants';\n\n/**\n * Given the players level and constitution modifier, determine their max health\n *\n * @param {*} level The current level of the player\n * @param {*} constitutionModifier The modifier the player has for constitution\n */\nexport default function calculateMaxHpPool(level, constitutionModifier) {\n  const healthBonus = constitutionModifier >= 0 ? level * (5 + constitutionModifier) : level * MIN_HEALTH_BONUS - MIN_HEALTH_BONUS;\n  return BASE_HEALTH + healthBonus;\n}","map":{"version":3,"names":["BASE_HEALTH","MIN_HEALTH_BONUS","calculateMaxHpPool","level","constitutionModifier","healthBonus"],"sources":["C:/Users/devis/Downloads/react-rpg.com-master/src/utils/calculate-max-hp-pool.js"],"sourcesContent":["import { BASE_HEALTH, MIN_HEALTH_BONUS } from '../config/constants';\n\n/**\n * Given the players level and constitution modifier, determine their max health\n *\n * @param {*} level The current level of the player\n * @param {*} constitutionModifier The modifier the player has for constitution\n */\nexport default function calculateMaxHpPool(level, constitutionModifier) {\n    const healthBonus =\n        constitutionModifier >= 0\n            ? level * (5 + constitutionModifier)\n            : level * MIN_HEALTH_BONUS - MIN_HEALTH_BONUS;\n    return BASE_HEALTH + healthBonus;\n}\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,qBAAqB;;AAEnE;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,kBAAkBA,CAACC,KAAK,EAAEC,oBAAoB,EAAE;EACpE,MAAMC,WAAW,GACbD,oBAAoB,IAAI,CAAC,GACnBD,KAAK,IAAI,CAAC,GAAGC,oBAAoB,CAAC,GAClCD,KAAK,GAAGF,gBAAgB,GAAGA,gBAAgB;EACrD,OAAOD,WAAW,GAAGK,WAAW;AACpC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}