{"ast":null,"code":"import { getChestName } from '../../../utils/get-chest-name';\nexport default function exploreChest(x, y) {\n  return (dispatch, getState) => {\n    // replace the closed chest img with open\n    const {\n      world\n    } = getState();\n    const {\n      chests\n    } = world;\n    const {\n      currentMap\n    } = world;\n    const chest = chests[getChestName(currentMap, x, y)];\n    if (chest !== undefined) {\n      dispatch({\n        type: 'SET_CHEST_DATA',\n        payload: {\n          gold: 0,\n          exp: 0,\n          item: chest.item,\n          x: x,\n          y: y\n        }\n      });\n    } else {\n      dispatch({\n        type: 'SET_CHEST_DATA',\n        payload: false\n      });\n    }\n    dispatch({\n      type: 'OPEN_CHEST',\n      payload: {\n        x,\n        y\n      }\n    });\n    // show the chest contents\n    dispatch({\n      type: 'PAUSE',\n      payload: {\n        pause: true,\n        chest: true\n      }\n    });\n  };\n}","map":{"version":3,"names":["getChestName","exploreChest","x","y","dispatch","getState","world","chests","currentMap","chest","undefined","type","payload","gold","exp","item","pause"],"sources":["C:/Users/devis/Downloads/react-rpg.com-master/src/features/player/actions/explore-chest.jsx"],"sourcesContent":["import { getChestName } from '../../../utils/get-chest-name';\n\nexport default function exploreChest(x, y) {\n    return (dispatch, getState) => {\n        // replace the closed chest img with open\n        const { world } = getState();\n        const { chests } = world;\n\n        const { currentMap } = world;\n        const chest = chests[getChestName(currentMap, x, y)];\n        if (chest !== undefined) {\n            dispatch({\n                type: 'SET_CHEST_DATA',\n                payload: {\n                    gold: 0,\n                    exp: 0,\n                    item: chest.item,\n                    x: x,\n                    y: y,\n                },\n            });\n        } else {\n            dispatch({\n                type: 'SET_CHEST_DATA',\n                payload: false,\n            });\n        }\n        dispatch({\n            type: 'OPEN_CHEST',\n            payload: { x, y },\n        });\n        // show the chest contents\n        dispatch({\n            type: 'PAUSE',\n            payload: {\n                pause: true,\n                chest: true,\n            },\n        });\n    };\n}\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,+BAA+B;AAE5D,eAAe,SAASC,YAAYA,CAACC,CAAC,EAAEC,CAAC,EAAE;EACvC,OAAO,CAACC,QAAQ,EAAEC,QAAQ,KAAK;IAC3B;IACA,MAAM;MAAEC;IAAM,CAAC,GAAGD,QAAQ,CAAC,CAAC;IAC5B,MAAM;MAAEE;IAAO,CAAC,GAAGD,KAAK;IAExB,MAAM;MAAEE;IAAW,CAAC,GAAGF,KAAK;IAC5B,MAAMG,KAAK,GAAGF,MAAM,CAACP,YAAY,CAACQ,UAAU,EAAEN,CAAC,EAAEC,CAAC,CAAC,CAAC;IACpD,IAAIM,KAAK,KAAKC,SAAS,EAAE;MACrBN,QAAQ,CAAC;QACLO,IAAI,EAAE,gBAAgB;QACtBC,OAAO,EAAE;UACLC,IAAI,EAAE,CAAC;UACPC,GAAG,EAAE,CAAC;UACNC,IAAI,EAAEN,KAAK,CAACM,IAAI;UAChBb,CAAC,EAAEA,CAAC;UACJC,CAAC,EAAEA;QACP;MACJ,CAAC,CAAC;IACN,CAAC,MAAM;MACHC,QAAQ,CAAC;QACLO,IAAI,EAAE,gBAAgB;QACtBC,OAAO,EAAE;MACb,CAAC,CAAC;IACN;IACAR,QAAQ,CAAC;MACLO,IAAI,EAAE,YAAY;MAClBC,OAAO,EAAE;QAAEV,CAAC;QAAEC;MAAE;IACpB,CAAC,CAAC;IACF;IACAC,QAAQ,CAAC;MACLO,IAAI,EAAE,OAAO;MACbC,OAAO,EAAE;QACLI,KAAK,EAAE,IAAI;QACXP,KAAK,EAAE;MACX;IACJ,CAAC,CAAC;EACN,CAAC;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}