{"ast":null,"code":"import _objectSpread from \"C:/Users/devis/Downloads/react-rpg.com-master/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\devis\\\\Downloads\\\\react-rpg.com-master\\\\src\\\\features\\\\journal\\\\reducer.jsx\",\n  _this = this;\nimport React from 'react';\nimport cloneDeep from 'lodash.clonedeep';\nimport uuidv4 from '../../utils/uuid-v4';\nimport isAbilityAllocationLevel from '../../utils/is-ability-allocation-level';\nimport { LEVEL_UP_ABILITY_POINTS, MAX_JOURNAL_ENTRIES } from '../../config/constants';\nimport spells from '../../data/spells';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  entries: [],\n  scroll: true\n};\nconst aOrAn = nextWord => 'aeiou'.includes(nextWord.toLowerCase().charAt(0)) ? 'an' : 'a';\nconst colourise = (value, type) => /*#__PURE__*/_jsxDEV(\"span\", {\n  className: type,\n  children: value\n}, uuidv4(), false, {\n  fileName: _jsxFileName,\n  lineNumber: 17,\n  columnNumber: 3\n}, this);\nconst journalReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n  let newState;\n  if (state.entries.length > MAX_JOURNAL_ENTRIES) {\n    // Make sure we don't keep too many entries so we use less memory and don't slow down the game\n    state.entries = state.entries.slice(state.entries.length - MAX_JOURNAL_ENTRIES);\n  }\n  switch (type) {\n    case 'MONSTER_ABILITY_CHECK':\n      {\n        const {\n          entity,\n          attackValue,\n          check,\n          against,\n          defender\n        } = payload;\n        newState = cloneDeep(state);\n        if (defender === 'player') {\n          newState.entries.push({\n            key: uuidv4(),\n            entry: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"The \", colourise(entity, 'type'), \" attacked you with an attack value of\", ' ', colourise(attackValue, 'score'), \" against your \", colourise(against, 'ability'), \" value of \", colourise(check, 'score')]\n            }, uuidv4(), true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 13\n            }, _this)\n          });\n        } else {\n          newState.entries.push({\n            key: uuidv4(),\n            entry: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"The \", colourise(entity, 'type'), \" attacked the \", colourise(defender, ''), \" with an attack value of \", colourise(attackValue, 'score'), \" against their\", ' ', colourise(against, 'ability'), \" value of \", colourise(check, 'score')]\n            }, uuidv4(), true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 13\n            }, _this)\n          });\n        }\n        return newState;\n      }\n    case 'CRITICAL_HIT':\n      {\n        const {\n          ability,\n          roll\n        } = payload;\n        newState = cloneDeep(state);\n        newState.entries.push({\n          key: uuidv4(),\n          entry: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"You performed \", aOrAn(ability), \" \", colourise(ability, 'ability'), \" check and rolled a\", ' ', colourise(roll, 'score'), \",\", colourise(' critical hit!', 'damage-to-monster')]\n          }, uuidv4(), true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 11\n          }, _this)\n        });\n        return newState;\n      }\n    case 'ABILITY_CHECK':\n      {\n        const {\n          ability,\n          entity,\n          roll,\n          check,\n          against\n        } = payload;\n        newState = cloneDeep(state);\n        newState.entries.push({\n          key: uuidv4(),\n          entry: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"You performed \", aOrAn(ability), \" \", colourise(ability, 'ability'), \" check and rolled\", ' ', colourise(roll, 'score'), \", which \", roll >= check ? 'succeeded' : 'failed', \" against the\", ' ', colourise(against, 'ability'), \" value of \", colourise(check, 'score'), \" for the\", ' ', colourise(entity, 'type')]\n          }, uuidv4(), true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }, _this)\n        });\n        return newState;\n      }\n    case 'HEAL_HP':\n      {\n        newState = cloneDeep(state);\n        newState.entries.push({\n          key: uuidv4(),\n          entry: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"You restored \", colourise(payload, 'restore-health'), \" health!\"]\n          }, uuidv4(), true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 16\n          }, _this)\n        });\n        return newState;\n      }\n    case 'RESTORE_MANA':\n      {\n        if (payload.kind === 'passive') return state;\n        newState = cloneDeep(state);\n        newState.entries.push({\n          key: uuidv4(),\n          entry: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"You restored \", colourise(payload.amount, 'restore-mana'), \" mana!\"]\n          }, uuidv4(), true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 16\n          }, _this)\n        });\n        return newState;\n      }\n    case 'DAMAGE_TO_PLAYER':\n      {\n        const {\n          entity,\n          damage,\n          kind,\n          effect\n        } = payload;\n        newState = cloneDeep(state);\n        if (kind === 'suicide') {\n          newState.entries.push({\n            key: uuidv4(),\n            entry: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"The \", colourise(entity, 'type'), \" committed suicide, dealing\", ' ', colourise(damage, 'damage-to-player'), \" damage to you!\"]\n            }, uuidv4(), true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 13\n            }, _this)\n          });\n        } else if (effect !== undefined) {\n          // The player was damaged by an effect applied to them\n          newState.entries.push({\n            key: uuidv4(),\n            entry: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"You took \", colourise(damage, 'damage-to-player'), \" damage from \", colourise(effect, 'ai'), \"!\"]\n            }, uuidv4(), true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 13\n            }, _this)\n          });\n        } else {\n          newState.entries.push({\n            key: uuidv4(),\n            entry: payload.damage === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"The \", colourise(entity, 'type'), \" missed you!\"]\n            }, uuidv4(), true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, _this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"The \", colourise(entity, 'type'), \" dealt \", colourise(damage, 'damage-to-player'), \" damage to you!\"]\n            }, uuidv4(), true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, _this)\n          });\n        }\n        return newState;\n      }\n    case 'DAMAGE_TO_MONSTER':\n      {\n        const {\n          entity,\n          damage,\n          from\n        } = payload;\n        newState = cloneDeep(state);\n        if (from === 'player') {\n          newState.entries.push({\n            key: uuidv4(),\n            entry: damage === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"You missed the \", colourise(entity, 'type'), \"!\"]\n            }, uuidv4(), true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, _this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"You dealt \", colourise(damage, 'damage-to-monster'), \" damage to the\", ' ', colourise(entity, 'type'), \"!\"]\n            }, uuidv4(), true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, _this)\n          });\n        } else if (from === 'suicide') {\n          newState.entries.push({\n            key: uuidv4(),\n            entry: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"The \", colourise(entity, 'type'), \" killed itself!\"]\n            }, uuidv4(), true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 18\n            }, _this)\n          });\n        } else {\n          newState.entries.push({\n            key: uuidv4(),\n            entry: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"The \", colourise(entity, 'type'), \" took \", colourise(damage, 'damage-to-monster'), \" damage from the \", colourise(from, 'damage-type'), \"!\"]\n            }, uuidv4(), true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 13\n            }, _this)\n          });\n        }\n        return newState;\n      }\n    case 'MONSTER_HEAL_HP':\n      {\n        const {\n          entity,\n          healAmount\n        } = payload;\n        newState = cloneDeep(state);\n        newState.entries.push({\n          key: uuidv4(),\n          entry: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"The \", colourise(entity, 'type'), \" healed \", colourise(healAmount, 'health-gain'), \" health!\"]\n          }, uuidv4(), true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 11\n          }, _this)\n        });\n        return newState;\n      }\n    case 'MONSTER_DIED':\n      {\n        newState = cloneDeep(state);\n        newState.entries.push({\n          key: uuidv4(),\n          entry: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"You vanquished the \", colourise(payload, 'type'), \"!\"]\n          }, uuidv4(), true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 16\n          }, _this)\n        });\n        return newState;\n      }\n    case 'USE_PROJECTILE':\n      {\n        const {\n          name,\n          information\n        } = payload.projectile;\n        newState = cloneDeep(state);\n        newState.entries.push({\n          key: uuidv4(),\n          entry: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"You \", information, \" \", colourise(name, 'projectile')]\n          }, uuidv4(), true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 11\n          }, _this)\n        });\n        return newState;\n      }\n    case 'MONSTER_USE_PROJECTILE':\n      {\n        const {\n          projectile,\n          entity\n        } = payload;\n        const {\n          name,\n          information\n        } = projectile;\n        newState = cloneDeep(state);\n        newState.entries.push({\n          key: uuidv4(),\n          entry: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"The \", colourise(entity, 'type'), \" \", information, \" \", colourise(name, 'projectile')]\n          }, uuidv4(), true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 11\n          }, _this)\n        });\n        return newState;\n      }\n    case 'CAST_SPELL':\n      {\n        const {\n          name\n        } = payload.projectile;\n        newState = cloneDeep(state);\n        newState.entries.push({\n          key: uuidv4(),\n          entry: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"You cast \", colourise(name, 'spell-cast')]\n          }, uuidv4(), true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 16\n          }, _this)\n        });\n        return newState;\n      }\n    case 'MONSTER_CAST_SPELL':\n      {\n        const {\n          entity,\n          spell\n        } = payload;\n        newState = cloneDeep(state);\n        newState.entries.push({\n          key: uuidv4(),\n          entry: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"The \", colourise(entity, 'type'), \" cast \", colourise(spell.name, 'spell-cast'), \"!\"]\n          }, uuidv4(), true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 11\n          }, _this)\n        });\n        return newState;\n      }\n    case 'EFFECT_PLAYER':\n      {\n        const {\n          effect\n        } = payload;\n        newState = cloneDeep(state);\n        newState.entries.push({\n          key: uuidv4(),\n          entry: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"You were \", colourise(effect, 'ai'), \"!\"]\n          }, uuidv4(), true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 16\n          }, _this)\n        });\n        return newState;\n      }\n    case 'CHANGE_AI':\n      {\n        const {\n          from,\n          ai,\n          entity,\n          original\n        } = payload;\n        newState = cloneDeep(state);\n        if (from !== original && from !== ai) {\n          newState.entries.push({\n            key: uuidv4(),\n            entry: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"The \", colourise(entity, 'type'), \" stopped being \", colourise(from, 'ai'), \"!\"]\n            }, uuidv4(), true, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 13\n            }, _this)\n          });\n        } else {\n          newState.entries.push({\n            key: uuidv4(),\n            entry: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"The \", colourise(entity, 'type'), \" was \", colourise(ai, 'ai'), \"!\"]\n            }, uuidv4(), true, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 13\n            }, _this)\n          });\n        }\n        return newState;\n      }\n    case 'GET_ITEM':\n      {\n        const {\n          name\n        } = payload;\n        newState = cloneDeep(state);\n        newState.entries.push({\n          key: uuidv4(),\n          entry: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"You gained an item: \", colourise(name, 'get-item')]\n          }, uuidv4(), true, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 16\n          }, _this)\n        });\n        return newState;\n      }\n    case 'GET_EXP':\n      {\n        newState = cloneDeep(state);\n        newState.entries.push({\n          key: uuidv4(),\n          entry: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"You gained \", colourise(payload, 'experience'), \" experience!\"]\n          }, uuidv4(), true, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 16\n          }, _this)\n        });\n        return newState;\n      }\n    case 'GET_GOLD':\n      {\n        newState = cloneDeep(state);\n        newState.entries.push({\n          key: uuidv4(),\n          entry: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"You gained \", colourise(payload, 'gold'), \" gold!\"]\n          }, uuidv4(), true, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 16\n          }, _this)\n        });\n        return newState;\n      }\n    case 'LEVEL_UP':\n      {\n        const {\n          level,\n          hp,\n          mana\n        } = payload;\n        newState = cloneDeep(state);\n        newState.entries.push({\n          key: uuidv4(),\n          entry: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"You reached level \", colourise(level, 'level'), \", gained \", colourise(hp, 'health-gain'), ' ', \"health and \", colourise(mana, 'mana-gain'), \" mana!\"]\n          }, uuidv4(), true, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 11\n          }, _this)\n        });\n        if (isAbilityAllocationLevel(level)) {\n          newState.entries.push({\n            key: uuidv4(),\n            entry: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"You gained \", colourise(LEVEL_UP_ABILITY_POINTS, 'level'), \" ability points!\"]\n            }, uuidv4(), true, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 13\n            }, _this)\n          });\n        }\n        const unlockedSpell = spells.filter(spell => spell.unlockLevel === level).pop();\n        if (unlockedSpell) {\n          newState.entries.push({\n            key: uuidv4(),\n            entry: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"You unlocked the \", colourise(unlockedSpell.name, 'level'), \" spell!\"]\n            }, uuidv4(), true, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 13\n            }, _this)\n          });\n        }\n        return newState;\n      }\n    case 'SET_JOURNAL_SCROLLING':\n      newState = cloneDeep(state);\n      newState.scroll = payload;\n      return newState;\n    case 'persist/REHYDRATE':\n    case 'LOAD_DATA':\n      {\n        if (!(payload && payload.journal)) return initialState;\n        newState = cloneDeep(payload.journal);\n        newState.entries = newState.entries.map(_ref => {\n          let {\n            key,\n            entry\n          } = _ref;\n          return {\n            key,\n            entry: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: entry.props.children.map(child => {\n                if (child.props) {\n                  return colourise(child.props.children, child.props.className);\n                } else {\n                  return child;\n                }\n              })\n            }, entry.key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 11\n            }, _this)\n          };\n        });\n        return _objectSpread(_objectSpread({}, initialState), newState);\n      }\n    case 'RESET':\n      return _objectSpread({}, initialState);\n    default:\n      return state;\n  }\n};\nexport default journalReducer;","map":{"version":3,"names":["React","cloneDeep","uuidv4","isAbilityAllocationLevel","LEVEL_UP_ABILITY_POINTS","MAX_JOURNAL_ENTRIES","spells","jsxDEV","_jsxDEV","initialState","entries","scroll","aOrAn","nextWord","includes","toLowerCase","charAt","colourise","value","type","className","children","fileName","_jsxFileName","lineNumber","columnNumber","journalReducer","state","arguments","length","undefined","payload","newState","slice","entity","attackValue","check","against","defender","push","key","entry","_this","ability","roll","kind","amount","damage","effect","from","healAmount","name","information","projectile","spell","ai","original","level","hp","mana","unlockedSpell","filter","unlockLevel","pop","journal","map","_ref","props","child","_objectSpread"],"sources":["C:/Users/devis/Downloads/react-rpg.com-master/src/features/journal/reducer.jsx"],"sourcesContent":["import React from 'react';\nimport cloneDeep from 'lodash.clonedeep';\n\nimport uuidv4 from '../../utils/uuid-v4';\nimport isAbilityAllocationLevel from '../../utils/is-ability-allocation-level';\nimport { LEVEL_UP_ABILITY_POINTS, MAX_JOURNAL_ENTRIES } from '../../config/constants';\nimport spells from '../../data/spells';\n\nconst initialState = {\n  entries: [],\n  scroll: true,\n};\n\nconst aOrAn = (nextWord) => ('aeiou'.includes(nextWord.toLowerCase().charAt(0)) ? 'an' : 'a');\n\nconst colourise = (value, type) => (\n  <span key={uuidv4()} className={type}>\n    {value}\n  </span>\n);\n\nconst journalReducer = (state = initialState, { type, payload }) => {\n  let newState;\n\n  if (state.entries.length > MAX_JOURNAL_ENTRIES) {\n    // Make sure we don't keep too many entries so we use less memory and don't slow down the game\n    state.entries = state.entries.slice(state.entries.length - MAX_JOURNAL_ENTRIES);\n  }\n\n  switch (type) {\n    case 'MONSTER_ABILITY_CHECK': {\n      const { entity, attackValue, check, against, defender } = payload;\n\n      newState = cloneDeep(state);\n\n      if (defender === 'player') {\n        newState.entries.push({\n          key: uuidv4(),\n          entry: (\n            <p key={uuidv4()}>\n              The {colourise(entity, 'type')} attacked you with an attack value of{' '}\n              {colourise(attackValue, 'score')} against your {colourise(against, 'ability')} value\n              of {colourise(check, 'score')}\n            </p>\n          ),\n        });\n      } else {\n        newState.entries.push({\n          key: uuidv4(),\n          entry: (\n            <p key={uuidv4()}>\n              The {colourise(entity, 'type')} attacked the {colourise(defender, '')} with an attack\n              value of {colourise(attackValue, 'score')} against their{' '}\n              {colourise(against, 'ability')} value of {colourise(check, 'score')}\n            </p>\n          ),\n        });\n      }\n      return newState;\n    }\n\n    case 'CRITICAL_HIT': {\n      const { ability, roll } = payload;\n\n      newState = cloneDeep(state);\n      newState.entries.push({\n        key: uuidv4(),\n        entry: (\n          <p key={uuidv4()}>\n            You performed {aOrAn(ability)} {colourise(ability, 'ability')} check and rolled a{' '}\n            {colourise(roll, 'score')},{colourise(' critical hit!', 'damage-to-monster')}\n          </p>\n        ),\n      });\n\n      return newState;\n    }\n\n    case 'ABILITY_CHECK': {\n      const { ability, entity, roll, check, against } = payload;\n\n      newState = cloneDeep(state);\n      newState.entries.push({\n        key: uuidv4(),\n        entry: (\n          <p key={uuidv4()}>\n            You performed {aOrAn(ability)} {colourise(ability, 'ability')} check and rolled{' '}\n            {colourise(roll, 'score')}, which {roll >= check ? 'succeeded' : 'failed'} against the{' '}\n            {colourise(against, 'ability')} value of {colourise(check, 'score')} for the{' '}\n            {colourise(entity, 'type')}\n          </p>\n        ),\n      });\n\n      return newState;\n    }\n\n    case 'HEAL_HP': {\n      newState = cloneDeep(state);\n      newState.entries.push({\n        key: uuidv4(),\n        entry: <p key={uuidv4()}>You restored {colourise(payload, 'restore-health')} health!</p>,\n      });\n      return newState;\n    }\n\n    case 'RESTORE_MANA': {\n      if (payload.kind === 'passive') return state;\n\n      newState = cloneDeep(state);\n      newState.entries.push({\n        key: uuidv4(),\n        entry: <p key={uuidv4()}>You restored {colourise(payload.amount, 'restore-mana')} mana!</p>,\n      });\n      return newState;\n    }\n\n    case 'DAMAGE_TO_PLAYER': {\n      const { entity, damage, kind, effect } = payload;\n      newState = cloneDeep(state);\n\n      if (kind === 'suicide') {\n        newState.entries.push({\n          key: uuidv4(),\n          entry: (\n            <p key={uuidv4()}>\n              The {colourise(entity, 'type')} committed suicide, dealing{' '}\n              {colourise(damage, 'damage-to-player')} damage to you!\n            </p>\n          ),\n        });\n      } else if (effect !== undefined) {\n        // The player was damaged by an effect applied to them\n        newState.entries.push({\n          key: uuidv4(),\n          entry: (\n            <p key={uuidv4()}>\n              You took {colourise(damage, 'damage-to-player')} damage from {colourise(effect, 'ai')}\n              !\n            </p>\n          ),\n        });\n      } else {\n        newState.entries.push({\n          key: uuidv4(),\n          entry:\n            payload.damage === 0 ? (\n              <p key={uuidv4()}>The {colourise(entity, 'type')} missed you!</p>\n            ) : (\n              <p key={uuidv4()}>\n                The {colourise(entity, 'type')} dealt {colourise(damage, 'damage-to-player')} damage\n                to you!\n              </p>\n            ),\n        });\n      }\n      return newState;\n    }\n\n    case 'DAMAGE_TO_MONSTER': {\n      const { entity, damage, from } = payload;\n\n      newState = cloneDeep(state);\n\n      if (from === 'player') {\n        newState.entries.push({\n          key: uuidv4(),\n          entry:\n            damage === 0 ? (\n              <p key={uuidv4()}>You missed the {colourise(entity, 'type')}!</p>\n            ) : (\n              <p key={uuidv4()}>\n                You dealt {colourise(damage, 'damage-to-monster')} damage to the{' '}\n                {colourise(entity, 'type')}!\n              </p>\n            ),\n        });\n      } else if (from === 'suicide') {\n        newState.entries.push({\n          key: uuidv4(),\n          entry: <p key={uuidv4()}>The {colourise(entity, 'type')} killed itself!</p>,\n        });\n      } else {\n        newState.entries.push({\n          key: uuidv4(),\n          entry: (\n            <p key={uuidv4()}>\n              The {colourise(entity, 'type')} took {colourise(damage, 'damage-to-monster')} damage\n              from the {colourise(from, 'damage-type')}!\n            </p>\n          ),\n        });\n      }\n      return newState;\n    }\n\n    case 'MONSTER_HEAL_HP': {\n      const { entity, healAmount } = payload;\n\n      newState = cloneDeep(state);\n      newState.entries.push({\n        key: uuidv4(),\n        entry: (\n          <p key={uuidv4()}>\n            The {colourise(entity, 'type')} healed {colourise(healAmount, 'health-gain')} health!\n          </p>\n        ),\n      });\n      return newState;\n    }\n\n    case 'MONSTER_DIED': {\n      newState = cloneDeep(state);\n      newState.entries.push({\n        key: uuidv4(),\n        entry: <p key={uuidv4()}>You vanquished the {colourise(payload, 'type')}!</p>,\n      });\n\n      return newState;\n    }\n\n    case 'USE_PROJECTILE': {\n      const { name, information } = payload.projectile;\n\n      newState = cloneDeep(state);\n      newState.entries.push({\n        key: uuidv4(),\n        entry: (\n          <p key={uuidv4()}>\n            You {information} {colourise(name, 'projectile')}\n          </p>\n        ),\n      });\n\n      return newState;\n    }\n\n    case 'MONSTER_USE_PROJECTILE': {\n      const { projectile, entity } = payload;\n      const { name, information } = projectile;\n\n      newState = cloneDeep(state);\n\n      newState.entries.push({\n        key: uuidv4(),\n        entry: (\n          <p key={uuidv4()}>\n            The {colourise(entity, 'type')} {information} {colourise(name, 'projectile')}\n          </p>\n        ),\n      });\n\n      return newState;\n    }\n\n    case 'CAST_SPELL': {\n      const { name } = payload.projectile;\n\n      newState = cloneDeep(state);\n      newState.entries.push({\n        key: uuidv4(),\n        entry: <p key={uuidv4()}>You cast {colourise(name, 'spell-cast')}</p>,\n      });\n      return newState;\n    }\n\n    case 'MONSTER_CAST_SPELL': {\n      const { entity, spell } = payload;\n\n      newState = cloneDeep(state);\n      newState.entries.push({\n        key: uuidv4(),\n        entry: (\n          <p key={uuidv4()}>\n            The {colourise(entity, 'type')} cast {colourise(spell.name, 'spell-cast')}!\n          </p>\n        ),\n      });\n\n      return newState;\n    }\n\n    case 'EFFECT_PLAYER': {\n      const { effect } = payload;\n      newState = cloneDeep(state);\n\n      newState.entries.push({\n        key: uuidv4(),\n        entry: <p key={uuidv4()}>You were {colourise(effect, 'ai')}!</p>,\n      });\n\n      return newState;\n    }\n\n    case 'CHANGE_AI': {\n      const { from, ai, entity, original } = payload;\n\n      newState = cloneDeep(state);\n\n      if (from !== original && from !== ai) {\n        newState.entries.push({\n          key: uuidv4(),\n          entry: (\n            <p key={uuidv4()}>\n              The {colourise(entity, 'type')} stopped being {colourise(from, 'ai')}!\n            </p>\n          ),\n        });\n      } else {\n        newState.entries.push({\n          key: uuidv4(),\n          entry: (\n            <p key={uuidv4()}>\n              The {colourise(entity, 'type')} was {colourise(ai, 'ai')}!\n            </p>\n          ),\n        });\n      }\n\n      return newState;\n    }\n\n    case 'GET_ITEM': {\n      const { name } = payload;\n\n      newState = cloneDeep(state);\n      newState.entries.push({\n        key: uuidv4(),\n        entry: <p key={uuidv4()}>You gained an item: {colourise(name, 'get-item')}</p>,\n      });\n      return newState;\n    }\n\n    case 'GET_EXP': {\n      newState = cloneDeep(state);\n      newState.entries.push({\n        key: uuidv4(),\n        entry: <p key={uuidv4()}>You gained {colourise(payload, 'experience')} experience!</p>,\n      });\n\n      return newState;\n    }\n\n    case 'GET_GOLD': {\n      newState = cloneDeep(state);\n      newState.entries.push({\n        key: uuidv4(),\n        entry: <p key={uuidv4()}>You gained {colourise(payload, 'gold')} gold!</p>,\n      });\n\n      return newState;\n    }\n\n    case 'LEVEL_UP': {\n      const { level, hp, mana } = payload;\n\n      newState = cloneDeep(state);\n      newState.entries.push({\n        key: uuidv4(),\n        entry: (\n          <p key={uuidv4()}>\n            You reached level {colourise(level, 'level')}, gained {colourise(hp, 'health-gain')}{' '}\n            health and {colourise(mana, 'mana-gain')} mana!\n          </p>\n        ),\n      });\n\n      if (isAbilityAllocationLevel(level)) {\n        newState.entries.push({\n          key: uuidv4(),\n          entry: (\n            <p key={uuidv4()}>\n              You gained {colourise(LEVEL_UP_ABILITY_POINTS, 'level')} ability points!\n            </p>\n          ),\n        });\n      }\n\n      const unlockedSpell = spells.filter((spell) => spell.unlockLevel === level).pop();\n\n      if (unlockedSpell) {\n        newState.entries.push({\n          key: uuidv4(),\n          entry: (\n            <p key={uuidv4()}>You unlocked the {colourise(unlockedSpell.name, 'level')} spell!</p>\n          ),\n        });\n      }\n\n      return newState;\n    }\n\n    case 'SET_JOURNAL_SCROLLING':\n      newState = cloneDeep(state);\n      newState.scroll = payload;\n      return newState;\n\n    case 'persist/REHYDRATE':\n    case 'LOAD_DATA': {\n      if (!(payload && payload.journal)) return initialState;\n\n      newState = cloneDeep(payload.journal);\n      newState.entries = newState.entries.map(({ key, entry }) => ({\n        key,\n        entry: (\n          <p key={entry.key}>\n            {entry.props.children.map((child) => {\n              if (child.props) {\n                return colourise(child.props.children, child.props.className);\n              } else {\n                return child;\n              }\n            })}\n          </p>\n        ),\n      }));\n      return { ...initialState, ...newState };\n    }\n\n    case 'RESET':\n      return { ...initialState };\n\n    default:\n      return state;\n  }\n};\n\nexport default journalReducer;\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,kBAAkB;AAExC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,wBAAwB,MAAM,yCAAyC;AAC9E,SAASC,uBAAuB,EAAEC,mBAAmB,QAAQ,wBAAwB;AACrF,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE,EAAE;EACXC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,KAAK,GAAIC,QAAQ,IAAM,OAAO,CAACC,QAAQ,CAACD,QAAQ,CAACE,WAAW,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,GAAI;AAE7F,MAAMC,SAAS,GAAGA,CAACC,KAAK,EAAEC,IAAI,kBAC5BX,OAAA;EAAqBY,SAAS,EAAED,IAAK;EAAAE,QAAA,EAClCH;AAAK,GADGhB,MAAM,CAAC,CAAC;EAAAoB,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAEb,CACP;AAED,MAAMC,cAAc,GAAG,SAAAA,CAAA,EAA6C;EAAA,IAA5CC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGnB,YAAY;EAAA,IAAE;IAAEU,IAAI;IAAEY;EAAQ,CAAC,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC7D,IAAIE,QAAQ;EAEZ,IAAIL,KAAK,CAACjB,OAAO,CAACmB,MAAM,GAAGxB,mBAAmB,EAAE;IAC9C;IACAsB,KAAK,CAACjB,OAAO,GAAGiB,KAAK,CAACjB,OAAO,CAACuB,KAAK,CAACN,KAAK,CAACjB,OAAO,CAACmB,MAAM,GAAGxB,mBAAmB,CAAC;EACjF;EAEA,QAAQc,IAAI;IACV,KAAK,uBAAuB;MAAE;QAC5B,MAAM;UAAEe,MAAM;UAAEC,WAAW;UAAEC,KAAK;UAAEC,OAAO;UAAEC;QAAS,CAAC,GAAGP,OAAO;QAEjEC,QAAQ,GAAG/B,SAAS,CAAC0B,KAAK,CAAC;QAE3B,IAAIW,QAAQ,KAAK,QAAQ,EAAE;UACzBN,QAAQ,CAACtB,OAAO,CAAC6B,IAAI,CAAC;YACpBC,GAAG,EAAEtC,MAAM,CAAC,CAAC;YACbuC,KAAK,eACHjC,OAAA;cAAAa,QAAA,GAAkB,MACZ,EAACJ,SAAS,CAACiB,MAAM,EAAE,MAAM,CAAC,EAAC,uCAAqC,EAAC,GAAG,EACvEjB,SAAS,CAACkB,WAAW,EAAE,OAAO,CAAC,EAAC,gBAAc,EAAClB,SAAS,CAACoB,OAAO,EAAE,SAAS,CAAC,EAAC,YAC3E,EAACpB,SAAS,CAACmB,KAAK,EAAE,OAAO,CAAC;YAAA,GAHvBlC,MAAM,CAAC,CAAC;cAAAoB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,GAAAiB,KAIb;UAEP,CAAC,CAAC;QACJ,CAAC,MAAM;UACLV,QAAQ,CAACtB,OAAO,CAAC6B,IAAI,CAAC;YACpBC,GAAG,EAAEtC,MAAM,CAAC,CAAC;YACbuC,KAAK,eACHjC,OAAA;cAAAa,QAAA,GAAkB,MACZ,EAACJ,SAAS,CAACiB,MAAM,EAAE,MAAM,CAAC,EAAC,gBAAc,EAACjB,SAAS,CAACqB,QAAQ,EAAE,EAAE,CAAC,EAAC,2BAC7D,EAACrB,SAAS,CAACkB,WAAW,EAAE,OAAO,CAAC,EAAC,gBAAc,EAAC,GAAG,EAC3DlB,SAAS,CAACoB,OAAO,EAAE,SAAS,CAAC,EAAC,YAAU,EAACpB,SAAS,CAACmB,KAAK,EAAE,OAAO,CAAC;YAAA,GAH7DlC,MAAM,CAAC,CAAC;cAAAoB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,GAAAiB,KAIb;UAEP,CAAC,CAAC;QACJ;QACA,OAAOV,QAAQ;MACjB;IAEA,KAAK,cAAc;MAAE;QACnB,MAAM;UAAEW,OAAO;UAAEC;QAAK,CAAC,GAAGb,OAAO;QAEjCC,QAAQ,GAAG/B,SAAS,CAAC0B,KAAK,CAAC;QAC3BK,QAAQ,CAACtB,OAAO,CAAC6B,IAAI,CAAC;UACpBC,GAAG,EAAEtC,MAAM,CAAC,CAAC;UACbuC,KAAK,eACHjC,OAAA;YAAAa,QAAA,GAAkB,gBACF,EAACT,KAAK,CAAC+B,OAAO,CAAC,EAAC,GAAC,EAAC1B,SAAS,CAAC0B,OAAO,EAAE,SAAS,CAAC,EAAC,qBAAmB,EAAC,GAAG,EACpF1B,SAAS,CAAC2B,IAAI,EAAE,OAAO,CAAC,EAAC,GAAC,EAAC3B,SAAS,CAAC,gBAAgB,EAAE,mBAAmB,CAAC;UAAA,GAFtEf,MAAM,CAAC,CAAC;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAiB,KAGb;QAEP,CAAC,CAAC;QAEF,OAAOV,QAAQ;MACjB;IAEA,KAAK,eAAe;MAAE;QACpB,MAAM;UAAEW,OAAO;UAAET,MAAM;UAAEU,IAAI;UAAER,KAAK;UAAEC;QAAQ,CAAC,GAAGN,OAAO;QAEzDC,QAAQ,GAAG/B,SAAS,CAAC0B,KAAK,CAAC;QAC3BK,QAAQ,CAACtB,OAAO,CAAC6B,IAAI,CAAC;UACpBC,GAAG,EAAEtC,MAAM,CAAC,CAAC;UACbuC,KAAK,eACHjC,OAAA;YAAAa,QAAA,GAAkB,gBACF,EAACT,KAAK,CAAC+B,OAAO,CAAC,EAAC,GAAC,EAAC1B,SAAS,CAAC0B,OAAO,EAAE,SAAS,CAAC,EAAC,mBAAiB,EAAC,GAAG,EAClF1B,SAAS,CAAC2B,IAAI,EAAE,OAAO,CAAC,EAAC,UAAQ,EAACA,IAAI,IAAIR,KAAK,GAAG,WAAW,GAAG,QAAQ,EAAC,cAAY,EAAC,GAAG,EACzFnB,SAAS,CAACoB,OAAO,EAAE,SAAS,CAAC,EAAC,YAAU,EAACpB,SAAS,CAACmB,KAAK,EAAE,OAAO,CAAC,EAAC,UAAQ,EAAC,GAAG,EAC/EnB,SAAS,CAACiB,MAAM,EAAE,MAAM,CAAC;UAAA,GAJpBhC,MAAM,CAAC,CAAC;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAiB,KAKb;QAEP,CAAC,CAAC;QAEF,OAAOV,QAAQ;MACjB;IAEA,KAAK,SAAS;MAAE;QACdA,QAAQ,GAAG/B,SAAS,CAAC0B,KAAK,CAAC;QAC3BK,QAAQ,CAACtB,OAAO,CAAC6B,IAAI,CAAC;UACpBC,GAAG,EAAEtC,MAAM,CAAC,CAAC;UACbuC,KAAK,eAAEjC,OAAA;YAAAa,QAAA,GAAkB,eAAa,EAACJ,SAAS,CAACc,OAAO,EAAE,gBAAgB,CAAC,EAAC,UAAQ;UAAA,GAArE7B,MAAM,CAAC,CAAC;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAiB,KAAgE;QACzF,CAAC,CAAC;QACF,OAAOV,QAAQ;MACjB;IAEA,KAAK,cAAc;MAAE;QACnB,IAAID,OAAO,CAACc,IAAI,KAAK,SAAS,EAAE,OAAOlB,KAAK;QAE5CK,QAAQ,GAAG/B,SAAS,CAAC0B,KAAK,CAAC;QAC3BK,QAAQ,CAACtB,OAAO,CAAC6B,IAAI,CAAC;UACpBC,GAAG,EAAEtC,MAAM,CAAC,CAAC;UACbuC,KAAK,eAAEjC,OAAA;YAAAa,QAAA,GAAkB,eAAa,EAACJ,SAAS,CAACc,OAAO,CAACe,MAAM,EAAE,cAAc,CAAC,EAAC,QAAM;UAAA,GAAxE5C,MAAM,CAAC,CAAC;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAiB,KAAmE;QAC5F,CAAC,CAAC;QACF,OAAOV,QAAQ;MACjB;IAEA,KAAK,kBAAkB;MAAE;QACvB,MAAM;UAAEE,MAAM;UAAEa,MAAM;UAAEF,IAAI;UAAEG;QAAO,CAAC,GAAGjB,OAAO;QAChDC,QAAQ,GAAG/B,SAAS,CAAC0B,KAAK,CAAC;QAE3B,IAAIkB,IAAI,KAAK,SAAS,EAAE;UACtBb,QAAQ,CAACtB,OAAO,CAAC6B,IAAI,CAAC;YACpBC,GAAG,EAAEtC,MAAM,CAAC,CAAC;YACbuC,KAAK,eACHjC,OAAA;cAAAa,QAAA,GAAkB,MACZ,EAACJ,SAAS,CAACiB,MAAM,EAAE,MAAM,CAAC,EAAC,6BAA2B,EAAC,GAAG,EAC7DjB,SAAS,CAAC8B,MAAM,EAAE,kBAAkB,CAAC,EAAC,iBACzC;YAAA,GAHQ7C,MAAM,CAAC,CAAC;cAAAoB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,GAAAiB,KAGb;UAEP,CAAC,CAAC;QACJ,CAAC,MAAM,IAAIM,MAAM,KAAKlB,SAAS,EAAE;UAC/B;UACAE,QAAQ,CAACtB,OAAO,CAAC6B,IAAI,CAAC;YACpBC,GAAG,EAAEtC,MAAM,CAAC,CAAC;YACbuC,KAAK,eACHjC,OAAA;cAAAa,QAAA,GAAkB,WACP,EAACJ,SAAS,CAAC8B,MAAM,EAAE,kBAAkB,CAAC,EAAC,eAAa,EAAC9B,SAAS,CAAC+B,MAAM,EAAE,IAAI,CAAC,EAAC,GAExF;YAAA,GAHQ9C,MAAM,CAAC,CAAC;cAAAoB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,GAAAiB,KAGb;UAEP,CAAC,CAAC;QACJ,CAAC,MAAM;UACLV,QAAQ,CAACtB,OAAO,CAAC6B,IAAI,CAAC;YACpBC,GAAG,EAAEtC,MAAM,CAAC,CAAC;YACbuC,KAAK,EACHV,OAAO,CAACgB,MAAM,KAAK,CAAC,gBAClBvC,OAAA;cAAAa,QAAA,GAAkB,MAAI,EAACJ,SAAS,CAACiB,MAAM,EAAE,MAAM,CAAC,EAAC,cAAY;YAAA,GAArDhC,MAAM,CAAC,CAAC;cAAAoB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,GAAAiB,KAAgD,CAAC,gBAEjElC,OAAA;cAAAa,QAAA,GAAkB,MACZ,EAACJ,SAAS,CAACiB,MAAM,EAAE,MAAM,CAAC,EAAC,SAAO,EAACjB,SAAS,CAAC8B,MAAM,EAAE,kBAAkB,CAAC,EAAC,iBAE/E;YAAA,GAHQ7C,MAAM,CAAC,CAAC;cAAAoB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,GAAAiB,KAGb;UAET,CAAC,CAAC;QACJ;QACA,OAAOV,QAAQ;MACjB;IAEA,KAAK,mBAAmB;MAAE;QACxB,MAAM;UAAEE,MAAM;UAAEa,MAAM;UAAEE;QAAK,CAAC,GAAGlB,OAAO;QAExCC,QAAQ,GAAG/B,SAAS,CAAC0B,KAAK,CAAC;QAE3B,IAAIsB,IAAI,KAAK,QAAQ,EAAE;UACrBjB,QAAQ,CAACtB,OAAO,CAAC6B,IAAI,CAAC;YACpBC,GAAG,EAAEtC,MAAM,CAAC,CAAC;YACbuC,KAAK,EACHM,MAAM,KAAK,CAAC,gBACVvC,OAAA;cAAAa,QAAA,GAAkB,iBAAe,EAACJ,SAAS,CAACiB,MAAM,EAAE,MAAM,CAAC,EAAC,GAAC;YAAA,GAArDhC,MAAM,CAAC,CAAC;cAAAoB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,GAAAiB,KAAgD,CAAC,gBAEjElC,OAAA;cAAAa,QAAA,GAAkB,YACN,EAACJ,SAAS,CAAC8B,MAAM,EAAE,mBAAmB,CAAC,EAAC,gBAAc,EAAC,GAAG,EACnE9B,SAAS,CAACiB,MAAM,EAAE,MAAM,CAAC,EAAC,GAC7B;YAAA,GAHQhC,MAAM,CAAC,CAAC;cAAAoB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,GAAAiB,KAGb;UAET,CAAC,CAAC;QACJ,CAAC,MAAM,IAAIO,IAAI,KAAK,SAAS,EAAE;UAC7BjB,QAAQ,CAACtB,OAAO,CAAC6B,IAAI,CAAC;YACpBC,GAAG,EAAEtC,MAAM,CAAC,CAAC;YACbuC,KAAK,eAAEjC,OAAA;cAAAa,QAAA,GAAkB,MAAI,EAACJ,SAAS,CAACiB,MAAM,EAAE,MAAM,CAAC,EAAC,iBAAe;YAAA,GAAxDhC,MAAM,CAAC,CAAC;cAAAoB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,GAAAiB,KAAmD;UAC5E,CAAC,CAAC;QACJ,CAAC,MAAM;UACLV,QAAQ,CAACtB,OAAO,CAAC6B,IAAI,CAAC;YACpBC,GAAG,EAAEtC,MAAM,CAAC,CAAC;YACbuC,KAAK,eACHjC,OAAA;cAAAa,QAAA,GAAkB,MACZ,EAACJ,SAAS,CAACiB,MAAM,EAAE,MAAM,CAAC,EAAC,QAAM,EAACjB,SAAS,CAAC8B,MAAM,EAAE,mBAAmB,CAAC,EAAC,mBACpE,EAAC9B,SAAS,CAACgC,IAAI,EAAE,aAAa,CAAC,EAAC,GAC3C;YAAA,GAHQ/C,MAAM,CAAC,CAAC;cAAAoB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,GAAAiB,KAGb;UAEP,CAAC,CAAC;QACJ;QACA,OAAOV,QAAQ;MACjB;IAEA,KAAK,iBAAiB;MAAE;QACtB,MAAM;UAAEE,MAAM;UAAEgB;QAAW,CAAC,GAAGnB,OAAO;QAEtCC,QAAQ,GAAG/B,SAAS,CAAC0B,KAAK,CAAC;QAC3BK,QAAQ,CAACtB,OAAO,CAAC6B,IAAI,CAAC;UACpBC,GAAG,EAAEtC,MAAM,CAAC,CAAC;UACbuC,KAAK,eACHjC,OAAA;YAAAa,QAAA,GAAkB,MACZ,EAACJ,SAAS,CAACiB,MAAM,EAAE,MAAM,CAAC,EAAC,UAAQ,EAACjB,SAAS,CAACiC,UAAU,EAAE,aAAa,CAAC,EAAC,UAC/E;UAAA,GAFQhD,MAAM,CAAC,CAAC;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAiB,KAEb;QAEP,CAAC,CAAC;QACF,OAAOV,QAAQ;MACjB;IAEA,KAAK,cAAc;MAAE;QACnBA,QAAQ,GAAG/B,SAAS,CAAC0B,KAAK,CAAC;QAC3BK,QAAQ,CAACtB,OAAO,CAAC6B,IAAI,CAAC;UACpBC,GAAG,EAAEtC,MAAM,CAAC,CAAC;UACbuC,KAAK,eAAEjC,OAAA;YAAAa,QAAA,GAAkB,qBAAmB,EAACJ,SAAS,CAACc,OAAO,EAAE,MAAM,CAAC,EAAC,GAAC;UAAA,GAA1D7B,MAAM,CAAC,CAAC;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAiB,KAAqD;QAC9E,CAAC,CAAC;QAEF,OAAOV,QAAQ;MACjB;IAEA,KAAK,gBAAgB;MAAE;QACrB,MAAM;UAAEmB,IAAI;UAAEC;QAAY,CAAC,GAAGrB,OAAO,CAACsB,UAAU;QAEhDrB,QAAQ,GAAG/B,SAAS,CAAC0B,KAAK,CAAC;QAC3BK,QAAQ,CAACtB,OAAO,CAAC6B,IAAI,CAAC;UACpBC,GAAG,EAAEtC,MAAM,CAAC,CAAC;UACbuC,KAAK,eACHjC,OAAA;YAAAa,QAAA,GAAkB,MACZ,EAAC+B,WAAW,EAAC,GAAC,EAACnC,SAAS,CAACkC,IAAI,EAAE,YAAY,CAAC;UAAA,GAD1CjD,MAAM,CAAC,CAAC;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAiB,KAEb;QAEP,CAAC,CAAC;QAEF,OAAOV,QAAQ;MACjB;IAEA,KAAK,wBAAwB;MAAE;QAC7B,MAAM;UAAEqB,UAAU;UAAEnB;QAAO,CAAC,GAAGH,OAAO;QACtC,MAAM;UAAEoB,IAAI;UAAEC;QAAY,CAAC,GAAGC,UAAU;QAExCrB,QAAQ,GAAG/B,SAAS,CAAC0B,KAAK,CAAC;QAE3BK,QAAQ,CAACtB,OAAO,CAAC6B,IAAI,CAAC;UACpBC,GAAG,EAAEtC,MAAM,CAAC,CAAC;UACbuC,KAAK,eACHjC,OAAA;YAAAa,QAAA,GAAkB,MACZ,EAACJ,SAAS,CAACiB,MAAM,EAAE,MAAM,CAAC,EAAC,GAAC,EAACkB,WAAW,EAAC,GAAC,EAACnC,SAAS,CAACkC,IAAI,EAAE,YAAY,CAAC;UAAA,GADtEjD,MAAM,CAAC,CAAC;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAiB,KAEb;QAEP,CAAC,CAAC;QAEF,OAAOV,QAAQ;MACjB;IAEA,KAAK,YAAY;MAAE;QACjB,MAAM;UAAEmB;QAAK,CAAC,GAAGpB,OAAO,CAACsB,UAAU;QAEnCrB,QAAQ,GAAG/B,SAAS,CAAC0B,KAAK,CAAC;QAC3BK,QAAQ,CAACtB,OAAO,CAAC6B,IAAI,CAAC;UACpBC,GAAG,EAAEtC,MAAM,CAAC,CAAC;UACbuC,KAAK,eAAEjC,OAAA;YAAAa,QAAA,GAAkB,WAAS,EAACJ,SAAS,CAACkC,IAAI,EAAE,YAAY,CAAC;UAAA,GAAjDjD,MAAM,CAAC,CAAC;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAiB,KAA6C;QACtE,CAAC,CAAC;QACF,OAAOV,QAAQ;MACjB;IAEA,KAAK,oBAAoB;MAAE;QACzB,MAAM;UAAEE,MAAM;UAAEoB;QAAM,CAAC,GAAGvB,OAAO;QAEjCC,QAAQ,GAAG/B,SAAS,CAAC0B,KAAK,CAAC;QAC3BK,QAAQ,CAACtB,OAAO,CAAC6B,IAAI,CAAC;UACpBC,GAAG,EAAEtC,MAAM,CAAC,CAAC;UACbuC,KAAK,eACHjC,OAAA;YAAAa,QAAA,GAAkB,MACZ,EAACJ,SAAS,CAACiB,MAAM,EAAE,MAAM,CAAC,EAAC,QAAM,EAACjB,SAAS,CAACqC,KAAK,CAACH,IAAI,EAAE,YAAY,CAAC,EAAC,GAC5E;UAAA,GAFQjD,MAAM,CAAC,CAAC;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAiB,KAEb;QAEP,CAAC,CAAC;QAEF,OAAOV,QAAQ;MACjB;IAEA,KAAK,eAAe;MAAE;QACpB,MAAM;UAAEgB;QAAO,CAAC,GAAGjB,OAAO;QAC1BC,QAAQ,GAAG/B,SAAS,CAAC0B,KAAK,CAAC;QAE3BK,QAAQ,CAACtB,OAAO,CAAC6B,IAAI,CAAC;UACpBC,GAAG,EAAEtC,MAAM,CAAC,CAAC;UACbuC,KAAK,eAAEjC,OAAA;YAAAa,QAAA,GAAkB,WAAS,EAACJ,SAAS,CAAC+B,MAAM,EAAE,IAAI,CAAC,EAAC,GAAC;UAAA,GAA7C9C,MAAM,CAAC,CAAC;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAiB,KAAwC;QACjE,CAAC,CAAC;QAEF,OAAOV,QAAQ;MACjB;IAEA,KAAK,WAAW;MAAE;QAChB,MAAM;UAAEiB,IAAI;UAAEM,EAAE;UAAErB,MAAM;UAAEsB;QAAS,CAAC,GAAGzB,OAAO;QAE9CC,QAAQ,GAAG/B,SAAS,CAAC0B,KAAK,CAAC;QAE3B,IAAIsB,IAAI,KAAKO,QAAQ,IAAIP,IAAI,KAAKM,EAAE,EAAE;UACpCvB,QAAQ,CAACtB,OAAO,CAAC6B,IAAI,CAAC;YACpBC,GAAG,EAAEtC,MAAM,CAAC,CAAC;YACbuC,KAAK,eACHjC,OAAA;cAAAa,QAAA,GAAkB,MACZ,EAACJ,SAAS,CAACiB,MAAM,EAAE,MAAM,CAAC,EAAC,iBAAe,EAACjB,SAAS,CAACgC,IAAI,EAAE,IAAI,CAAC,EAAC,GACvE;YAAA,GAFQ/C,MAAM,CAAC,CAAC;cAAAoB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,GAAAiB,KAEb;UAEP,CAAC,CAAC;QACJ,CAAC,MAAM;UACLV,QAAQ,CAACtB,OAAO,CAAC6B,IAAI,CAAC;YACpBC,GAAG,EAAEtC,MAAM,CAAC,CAAC;YACbuC,KAAK,eACHjC,OAAA;cAAAa,QAAA,GAAkB,MACZ,EAACJ,SAAS,CAACiB,MAAM,EAAE,MAAM,CAAC,EAAC,OAAK,EAACjB,SAAS,CAACsC,EAAE,EAAE,IAAI,CAAC,EAAC,GAC3D;YAAA,GAFQrD,MAAM,CAAC,CAAC;cAAAoB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,GAAAiB,KAEb;UAEP,CAAC,CAAC;QACJ;QAEA,OAAOV,QAAQ;MACjB;IAEA,KAAK,UAAU;MAAE;QACf,MAAM;UAAEmB;QAAK,CAAC,GAAGpB,OAAO;QAExBC,QAAQ,GAAG/B,SAAS,CAAC0B,KAAK,CAAC;QAC3BK,QAAQ,CAACtB,OAAO,CAAC6B,IAAI,CAAC;UACpBC,GAAG,EAAEtC,MAAM,CAAC,CAAC;UACbuC,KAAK,eAAEjC,OAAA;YAAAa,QAAA,GAAkB,sBAAoB,EAACJ,SAAS,CAACkC,IAAI,EAAE,UAAU,CAAC;UAAA,GAA1DjD,MAAM,CAAC,CAAC;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAiB,KAAsD;QAC/E,CAAC,CAAC;QACF,OAAOV,QAAQ;MACjB;IAEA,KAAK,SAAS;MAAE;QACdA,QAAQ,GAAG/B,SAAS,CAAC0B,KAAK,CAAC;QAC3BK,QAAQ,CAACtB,OAAO,CAAC6B,IAAI,CAAC;UACpBC,GAAG,EAAEtC,MAAM,CAAC,CAAC;UACbuC,KAAK,eAAEjC,OAAA;YAAAa,QAAA,GAAkB,aAAW,EAACJ,SAAS,CAACc,OAAO,EAAE,YAAY,CAAC,EAAC,cAAY;UAAA,GAAnE7B,MAAM,CAAC,CAAC;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAiB,KAA8D;QACvF,CAAC,CAAC;QAEF,OAAOV,QAAQ;MACjB;IAEA,KAAK,UAAU;MAAE;QACfA,QAAQ,GAAG/B,SAAS,CAAC0B,KAAK,CAAC;QAC3BK,QAAQ,CAACtB,OAAO,CAAC6B,IAAI,CAAC;UACpBC,GAAG,EAAEtC,MAAM,CAAC,CAAC;UACbuC,KAAK,eAAEjC,OAAA;YAAAa,QAAA,GAAkB,aAAW,EAACJ,SAAS,CAACc,OAAO,EAAE,MAAM,CAAC,EAAC,QAAM;UAAA,GAAvD7B,MAAM,CAAC,CAAC;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAiB,KAAkD;QAC3E,CAAC,CAAC;QAEF,OAAOV,QAAQ;MACjB;IAEA,KAAK,UAAU;MAAE;QACf,MAAM;UAAEyB,KAAK;UAAEC,EAAE;UAAEC;QAAK,CAAC,GAAG5B,OAAO;QAEnCC,QAAQ,GAAG/B,SAAS,CAAC0B,KAAK,CAAC;QAC3BK,QAAQ,CAACtB,OAAO,CAAC6B,IAAI,CAAC;UACpBC,GAAG,EAAEtC,MAAM,CAAC,CAAC;UACbuC,KAAK,eACHjC,OAAA;YAAAa,QAAA,GAAkB,oBACE,EAACJ,SAAS,CAACwC,KAAK,EAAE,OAAO,CAAC,EAAC,WAAS,EAACxC,SAAS,CAACyC,EAAE,EAAE,aAAa,CAAC,EAAE,GAAG,EAAC,aAC9E,EAACzC,SAAS,CAAC0C,IAAI,EAAE,WAAW,CAAC,EAAC,QAC3C;UAAA,GAHQzD,MAAM,CAAC,CAAC;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAiB,KAGb;QAEP,CAAC,CAAC;QAEF,IAAIvC,wBAAwB,CAACsD,KAAK,CAAC,EAAE;UACnCzB,QAAQ,CAACtB,OAAO,CAAC6B,IAAI,CAAC;YACpBC,GAAG,EAAEtC,MAAM,CAAC,CAAC;YACbuC,KAAK,eACHjC,OAAA;cAAAa,QAAA,GAAkB,aACL,EAACJ,SAAS,CAACb,uBAAuB,EAAE,OAAO,CAAC,EAAC,kBAC1D;YAAA,GAFQF,MAAM,CAAC,CAAC;cAAAoB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,GAAAiB,KAEb;UAEP,CAAC,CAAC;QACJ;QAEA,MAAMkB,aAAa,GAAGtD,MAAM,CAACuD,MAAM,CAAEP,KAAK,IAAKA,KAAK,CAACQ,WAAW,KAAKL,KAAK,CAAC,CAACM,GAAG,CAAC,CAAC;QAEjF,IAAIH,aAAa,EAAE;UACjB5B,QAAQ,CAACtB,OAAO,CAAC6B,IAAI,CAAC;YACpBC,GAAG,EAAEtC,MAAM,CAAC,CAAC;YACbuC,KAAK,eACHjC,OAAA;cAAAa,QAAA,GAAkB,mBAAiB,EAACJ,SAAS,CAAC2C,aAAa,CAACT,IAAI,EAAE,OAAO,CAAC,EAAC,SAAO;YAAA,GAA1EjD,MAAM,CAAC,CAAC;cAAAoB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,GAAAiB,KAAqE;UAEzF,CAAC,CAAC;QACJ;QAEA,OAAOV,QAAQ;MACjB;IAEA,KAAK,uBAAuB;MAC1BA,QAAQ,GAAG/B,SAAS,CAAC0B,KAAK,CAAC;MAC3BK,QAAQ,CAACrB,MAAM,GAAGoB,OAAO;MACzB,OAAOC,QAAQ;IAEjB,KAAK,mBAAmB;IACxB,KAAK,WAAW;MAAE;QAChB,IAAI,EAAED,OAAO,IAAIA,OAAO,CAACiC,OAAO,CAAC,EAAE,OAAOvD,YAAY;QAEtDuB,QAAQ,GAAG/B,SAAS,CAAC8B,OAAO,CAACiC,OAAO,CAAC;QACrChC,QAAQ,CAACtB,OAAO,GAAGsB,QAAQ,CAACtB,OAAO,CAACuD,GAAG,CAACC,IAAA;UAAA,IAAC;YAAE1B,GAAG;YAAEC;UAAM,CAAC,GAAAyB,IAAA;UAAA,OAAM;YAC3D1B,GAAG;YACHC,KAAK,eACHjC,OAAA;cAAAa,QAAA,EACGoB,KAAK,CAAC0B,KAAK,CAAC9C,QAAQ,CAAC4C,GAAG,CAAEG,KAAK,IAAK;gBACnC,IAAIA,KAAK,CAACD,KAAK,EAAE;kBACf,OAAOlD,SAAS,CAACmD,KAAK,CAACD,KAAK,CAAC9C,QAAQ,EAAE+C,KAAK,CAACD,KAAK,CAAC/C,SAAS,CAAC;gBAC/D,CAAC,MAAM;kBACL,OAAOgD,KAAK;gBACd;cACF,CAAC;YAAC,GAPI3B,KAAK,CAACD,GAAG;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,GAAAiB,KAQd;UAEP,CAAC;QAAA,CAAC,CAAC;QACH,OAAA2B,aAAA,CAAAA,aAAA,KAAY5D,YAAY,GAAKuB,QAAQ;MACvC;IAEA,KAAK,OAAO;MACV,OAAAqC,aAAA,KAAY5D,YAAY;IAE1B;MACE,OAAOkB,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}