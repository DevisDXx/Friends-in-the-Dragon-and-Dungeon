{"ast":null,"code":"// max number of inventory items\nexport const MAX_ITEMS = 8;\nexport const MAX_ITEMS_UPGRADE = 12;\n// how far the player can 'see' or 'explore'\nexport const SIGHT_RADIUS = 3;\n// how fast the player move animation plays (ms)\nexport const ANIMATION_SPEED = 350;\n// size of tiles\nexport const SPRITE_SIZE = 40;\n// number of tiles in the map\nconst TILE_HEIGHT = 15;\nconst TILE_WIDTH = 20;\nexport const MAP_DIMENSIONS = [TILE_WIDTH, TILE_HEIGHT];\n// map size is set to 800 x 600\nexport const MAP_HEIGHT = SPRITE_SIZE * TILE_HEIGHT;\nexport const MAP_WIDTH = SPRITE_SIZE * TILE_WIDTH;\n// configs for random map generation\nexport const MAX_TUNNELS = 60;\nexport const MAX_LENGTH = 5;\n// set the main game's start map\nexport const START_MAP = '1_1';\n// set the duration for showing the snackbar (ms)\nexport const SNACK_DURATION = 2500;\n// set the size for the game viewport (in pixels)\nexport const GAME_VIEWPORT_SIZE = 350;\nexport const GAME_VIEWPORT_SIZE_LG = 400;\n// set the minimum level for tier X items\nexport const TIER_2 = 10;\nexport const TIER_3 = 20;\nexport const TIER_4 = 30;\n// set the pixel values for the different screen sizes\nexport const SCREEN_SMALL_WIDTH = 410;\nexport const SCREEN_SMALL_HEIGHT = 410;\nexport const SCREEN_MEDIUM_WIDTH = 600;\nexport const SCREEN_MEDIUM_HEIGHT = 680;\nexport const MIN_WIDTH_FOR_JOURNAL = 1100;\nexport const MIN_SIDESCREEN_WIDTH_FOR_JOURNAL = 1100;\n// set the number of tiles to pad the map with (so the player cant see edge)\nexport const MAP_PADDING_DISTANCE = 5;\n// set the time for the map to transition in/out\nexport const MAP_TRANSITION_DELAY = 500;\n// The max value any ability score can have\nexport const MAX_ABILITY_SCORE = 20;\n// The default value of an ability score\nexport const STARTING_ABILITY_SCORE_VALUE = 8;\n// The default value of an ability score with race bonus\nexport const RACE_ABILITY_BONUS = 2;\n// The starting points a player can allocate\nexport const STARTING_ABILITY_POINTS = 8;\n// The number of levels a player needs to level up to gain ability points\nexport const LEVELS_BETWEEN_ABILITY_POINT_GAIN = 3;\n// The number of ability points the player gets to allocate on levelling up\nexport const LEVEL_UP_ABILITY_POINTS = 2;\n// Base player health/mana values\nexport const BASE_HEALTH = 10;\nexport const BASE_MANA = 5;\n// Base health/mana level up values\nexport const MIN_HEALTH_BONUS = 2;\nexport const MIN_MANA_BONUS = 5;\n// Set macros for key codes\nexport const UP_KEY = 38;\nexport const DOWN_KEY = 40;\nexport const LEFT_KEY = 37;\nexport const RIGHT_KEY = 39;\nexport const W_KEY = 87;\nexport const S_KEY = 83;\nexport const A_KEY = 65;\nexport const D_KEY = 68;\nexport const E_KEY = 69;\nexport const U_KEY = 85;\nexport const H_KEY = 72;\nexport const I_KEY = 73;\nexport const J_KEY = 74;\nexport const C_KEY = 67;\nexport const B_KEY = 66;\nexport const SPACE_KEY = 32;\nexport const ENTER_KEY = 13;\nexport const ESC_KEY = 27;\n\n// If the player is unarmed, we need them to still be able to attack\nexport const UNARMED_DAMAGE = '1d4';\nexport const FISTS = {\n  name: 'fists',\n  kind: 'melee',\n  range: 1,\n  damage: UNARMED_DAMAGE,\n  type: 'weapon'\n};\n\n// The player regenerates mana at this rate\nexport const PASSIVE_MANA_RESTORE_TURNS = 10;\nexport const OUT_OF_COMBAT_RANGE = 4;\n\n// For calculating buy/sell prices\nexport const MIN_PRICE_PERCENT = 0.1;\nexport const MID_PRICE_PERCENT = 0.6;\nexport const MAX_PRICE_PERCENT = 1.2;\n\n// The number of turns an AI change stays in effect\nexport const AI_CHANGE_TURNS = 3;\n// Damage inflicted by poison every time it hits\nexport const POISON_DAMAGE = '1d4';\nexport const TURNS_FOR_POISON = 3;\nexport const SHOCK_DAMAGE = '1d4';\n\n// The maximum amount of journal entries. If this is too large it can slow the game down\nexport const MAX_JOURNAL_ENTRIES = 100;\n\n// Not entirely sure why, but apparently we need to apply some hue offsets\n// but only to certain items\nexport const HUE_OFFSETS = {\n  skinColour: -70,\n  hairColour: -70,\n  armourColour: +70,\n  clothesColour: 0\n};\n\n// Reference URL for loading tiles from public/ directory\nexport const GET_REF_URL = () => {\n  let url = import.meta.url;\n  let pos;\n  const isProd = import.meta.env.PROD;\n  if (isProd) {\n    pos = url.indexOf('assets');\n  } else {\n    pos = url.indexOf('src');\n  }\n  const newURL = url.substring(0, pos) + 'tiles/';\n  return newURL;\n};\n_c = GET_REF_URL;\nexport const REF_URL = GET_REF_URL();\nvar _c;\n$RefreshReg$(_c, \"GET_REF_URL\");","map":{"version":3,"names":["MAX_ITEMS","MAX_ITEMS_UPGRADE","SIGHT_RADIUS","ANIMATION_SPEED","SPRITE_SIZE","TILE_HEIGHT","TILE_WIDTH","MAP_DIMENSIONS","MAP_HEIGHT","MAP_WIDTH","MAX_TUNNELS","MAX_LENGTH","START_MAP","SNACK_DURATION","GAME_VIEWPORT_SIZE","GAME_VIEWPORT_SIZE_LG","TIER_2","TIER_3","TIER_4","SCREEN_SMALL_WIDTH","SCREEN_SMALL_HEIGHT","SCREEN_MEDIUM_WIDTH","SCREEN_MEDIUM_HEIGHT","MIN_WIDTH_FOR_JOURNAL","MIN_SIDESCREEN_WIDTH_FOR_JOURNAL","MAP_PADDING_DISTANCE","MAP_TRANSITION_DELAY","MAX_ABILITY_SCORE","STARTING_ABILITY_SCORE_VALUE","RACE_ABILITY_BONUS","STARTING_ABILITY_POINTS","LEVELS_BETWEEN_ABILITY_POINT_GAIN","LEVEL_UP_ABILITY_POINTS","BASE_HEALTH","BASE_MANA","MIN_HEALTH_BONUS","MIN_MANA_BONUS","UP_KEY","DOWN_KEY","LEFT_KEY","RIGHT_KEY","W_KEY","S_KEY","A_KEY","D_KEY","E_KEY","U_KEY","H_KEY","I_KEY","J_KEY","C_KEY","B_KEY","SPACE_KEY","ENTER_KEY","ESC_KEY","UNARMED_DAMAGE","FISTS","name","kind","range","damage","type","PASSIVE_MANA_RESTORE_TURNS","OUT_OF_COMBAT_RANGE","MIN_PRICE_PERCENT","MID_PRICE_PERCENT","MAX_PRICE_PERCENT","AI_CHANGE_TURNS","POISON_DAMAGE","TURNS_FOR_POISON","SHOCK_DAMAGE","MAX_JOURNAL_ENTRIES","HUE_OFFSETS","skinColour","hairColour","armourColour","clothesColour","GET_REF_URL","url","import","meta","pos","isProd","env","PROD","indexOf","newURL","substring","_c","REF_URL","$RefreshReg$"],"sources":["C:/Users/devis/Downloads/react-rpg.com-master/src/config/constants.js"],"sourcesContent":["// max number of inventory items\nexport const MAX_ITEMS = 8;\nexport const MAX_ITEMS_UPGRADE = 12;\n// how far the player can 'see' or 'explore'\nexport const SIGHT_RADIUS = 3;\n// how fast the player move animation plays (ms)\nexport const ANIMATION_SPEED = 350;\n// size of tiles\nexport const SPRITE_SIZE = 40;\n// number of tiles in the map\nconst TILE_HEIGHT = 15;\nconst TILE_WIDTH = 20;\nexport const MAP_DIMENSIONS = [TILE_WIDTH, TILE_HEIGHT];\n// map size is set to 800 x 600\nexport const MAP_HEIGHT = SPRITE_SIZE * TILE_HEIGHT;\nexport const MAP_WIDTH = SPRITE_SIZE * TILE_WIDTH;\n// configs for random map generation\nexport const MAX_TUNNELS = 60;\nexport const MAX_LENGTH = 5;\n// set the main game's start map\nexport const START_MAP = '1_1';\n// set the duration for showing the snackbar (ms)\nexport const SNACK_DURATION = 2500;\n// set the size for the game viewport (in pixels)\nexport const GAME_VIEWPORT_SIZE = 350;\nexport const GAME_VIEWPORT_SIZE_LG = 400;\n// set the minimum level for tier X items\nexport const TIER_2 = 10;\nexport const TIER_3 = 20;\nexport const TIER_4 = 30;\n// set the pixel values for the different screen sizes\nexport const SCREEN_SMALL_WIDTH = 410;\nexport const SCREEN_SMALL_HEIGHT = 410;\nexport const SCREEN_MEDIUM_WIDTH = 600;\nexport const SCREEN_MEDIUM_HEIGHT = 680;\nexport const MIN_WIDTH_FOR_JOURNAL = 1100;\nexport const MIN_SIDESCREEN_WIDTH_FOR_JOURNAL = 1100;\n// set the number of tiles to pad the map with (so the player cant see edge)\nexport const MAP_PADDING_DISTANCE = 5;\n// set the time for the map to transition in/out\nexport const MAP_TRANSITION_DELAY = 500;\n// The max value any ability score can have\nexport const MAX_ABILITY_SCORE = 20;\n// The default value of an ability score\nexport const STARTING_ABILITY_SCORE_VALUE = 8;\n// The default value of an ability score with race bonus\nexport const RACE_ABILITY_BONUS = 2;\n// The starting points a player can allocate\nexport const STARTING_ABILITY_POINTS = 8;\n// The number of levels a player needs to level up to gain ability points\nexport const LEVELS_BETWEEN_ABILITY_POINT_GAIN = 3;\n// The number of ability points the player gets to allocate on levelling up\nexport const LEVEL_UP_ABILITY_POINTS = 2;\n// Base player health/mana values\nexport const BASE_HEALTH = 10;\nexport const BASE_MANA = 5;\n// Base health/mana level up values\nexport const MIN_HEALTH_BONUS = 2;\nexport const MIN_MANA_BONUS = 5;\n// Set macros for key codes\nexport const UP_KEY = 38;\nexport const DOWN_KEY = 40;\nexport const LEFT_KEY = 37;\nexport const RIGHT_KEY = 39;\nexport const W_KEY = 87;\nexport const S_KEY = 83;\nexport const A_KEY = 65;\nexport const D_KEY = 68;\nexport const E_KEY = 69;\nexport const U_KEY = 85;\nexport const H_KEY = 72;\nexport const I_KEY = 73;\nexport const J_KEY = 74;\nexport const C_KEY = 67;\nexport const B_KEY = 66;\nexport const SPACE_KEY = 32;\nexport const ENTER_KEY = 13;\nexport const ESC_KEY = 27;\n\n// If the player is unarmed, we need them to still be able to attack\nexport const UNARMED_DAMAGE = '1d4';\nexport const FISTS = {\n    name: 'fists',\n    kind: 'melee',\n    range: 1,\n    damage: UNARMED_DAMAGE,\n    type: 'weapon',\n};\n\n// The player regenerates mana at this rate\nexport const PASSIVE_MANA_RESTORE_TURNS = 10;\nexport const OUT_OF_COMBAT_RANGE = 4;\n\n// For calculating buy/sell prices\nexport const MIN_PRICE_PERCENT = 0.1;\nexport const MID_PRICE_PERCENT = 0.6;\nexport const MAX_PRICE_PERCENT = 1.2;\n\n// The number of turns an AI change stays in effect\nexport const AI_CHANGE_TURNS = 3;\n// Damage inflicted by poison every time it hits\nexport const POISON_DAMAGE = '1d4';\nexport const TURNS_FOR_POISON = 3;\nexport const SHOCK_DAMAGE = '1d4';\n\n// The maximum amount of journal entries. If this is too large it can slow the game down\nexport const MAX_JOURNAL_ENTRIES = 100;\n\n// Not entirely sure why, but apparently we need to apply some hue offsets\n// but only to certain items\nexport const HUE_OFFSETS = {\n    skinColour: -70,\n    hairColour: -70,\n    armourColour: +70,\n    clothesColour: 0,\n}\n\n// Reference URL for loading tiles from public/ directory\nexport const GET_REF_URL = () => {\n\n    let url = import.meta.url;\n    let pos;\n\n    const isProd = import.meta.env.PROD;\n\n    if (isProd) {\n        pos = url.indexOf('assets');\n    } else {\n        pos = url.indexOf('src');\n    }\n    \n    const newURL = url.substring(0, pos) + 'tiles/';\n\n    return newURL;\n}\n\nexport const REF_URL = GET_REF_URL();\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}