{"ast":null,"code":"import _objectSpread from \"C:/Users/devis/Downloads/react-rpg.com-master/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport cloneDeep from 'lodash.clonedeep';\nconst initialState = {\n  direction: 'SOUTH',\n  position: [0, 0],\n  playerMoved: false,\n  playerAttacked: false,\n  spellCast: false,\n  monsterAttacked: false,\n  playerDied: false,\n  monsterDied: false,\n  targetPosition: [],\n  spell: null,\n  turnsOutOfCombat: 0,\n  monsterUseProjectile: false,\n  monsterProjectileTargetPosition: [],\n  monsterProjectileDirection: '',\n  monsterProjectile: null,\n  effects: {\n    poisoned: {\n      turns: 0,\n      immunityTurns: 0,\n      damage: '0'\n    }\n  }\n};\nconst playerReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n  switch (type) {\n    case 'MONSTER_DIED':\n      // trigger monster's death sound\n      return _objectSpread(_objectSpread({}, state), {}, {\n        monsterDied: !state.monsterDied\n      });\n    case 'PLAYER_DIED':\n      // trigger player's death sound\n      return _objectSpread(_objectSpread({}, state), {}, {\n        playerDied: !state.playerDied\n      });\n    case 'MONSTER_ATTACK':\n      // trigger monster's attack animation on player\n      return _objectSpread(_objectSpread({}, state), {}, {\n        monsterAttacked: !state.monsterAttacked,\n        turnsOutOfCombat: 0\n      });\n    case 'MONSTER_CAST_SPELL':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        monsterAttacked: !state.monsterAttacked,\n        turnsOutOfCombat: 0,\n        monsterUseProjectile: !state.monsterUseProjectile,\n        monsterProjectileTargetPosition: payload.position,\n        monsterProjectileDirection: payload.direction,\n        monsterProjectile: payload.spell\n      });\n    case 'SET_ACTIVE_SPELL':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        spell: cloneDeep(payload.spell)\n      });\n    case 'USE_PROJECTILE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        playerAttacked: !state.playerAttacked,\n        targetPosition: payload ? payload.position : [],\n        turnsOutOfCombat: 0\n      });\n    case 'MONSTER_USE_PROJECTILE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        monsterAttacked: !state.monsterAttacked,\n        turnsOutOfCombat: 0,\n        monsterUseProjectile: !state.monsterUseProjectile,\n        monsterProjectileTargetPosition: payload.position,\n        monsterProjectileDirection: payload.direction,\n        monsterProjectile: payload.projectile\n      });\n    case 'EFFECT_PLAYER':\n      {\n        const {\n          effect,\n          turns,\n          damage,\n          from\n        } = payload;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          effects: _objectSpread(_objectSpread({}, state.effects), {}, {\n            [effect]: {\n              turns,\n              immunityTurns: turns * 5,\n              damage,\n              from\n            }\n          })\n        });\n      }\n    case 'CAST_SPELL':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        spellCast: !state.spellCast,\n        targetPosition: payload ? payload.position : [],\n        turnsOutOfCombat: payload.projectile.kind === 'combat' ? 0 : state.turnsOutOfCombat\n      });\n    case 'PLAYER_ATTACK':\n      // trigger attack animation\n      return _objectSpread(_objectSpread({}, state), {}, {\n        playerAttacked: !state.playerAttacked,\n        turnsOutOfCombat: 0\n      });\n    case 'MOVE_PLAYER':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        playerMoved: !state.playerMoved\n      }, payload);\n    case 'TAKE_TURN':\n      Object.keys(state.effects).forEach(effect => {\n        const props = state.effects[effect];\n        state.effects[effect] = _objectSpread(_objectSpread({}, props), {}, {\n          turns: props.turns - 1,\n          immunityTurns: props.immunityTurns - 1\n        });\n      });\n      return _objectSpread(_objectSpread({}, state), {}, {\n        turnsOutOfCombat: state.turnsOutOfCombat + 1\n      });\n    case 'RESET':\n      return initialState;\n    case 'LOAD_DATA':\n      return _objectSpread(_objectSpread({}, initialState), payload.player);\n    default:\n      return state;\n  }\n};\nexport default playerReducer;","map":{"version":3,"names":["cloneDeep","initialState","direction","position","playerMoved","playerAttacked","spellCast","monsterAttacked","playerDied","monsterDied","targetPosition","spell","turnsOutOfCombat","monsterUseProjectile","monsterProjectileTargetPosition","monsterProjectileDirection","monsterProjectile","effects","poisoned","turns","immunityTurns","damage","playerReducer","state","arguments","length","undefined","type","payload","_objectSpread","projectile","effect","from","kind","Object","keys","forEach","props","player"],"sources":["C:/Users/devis/Downloads/react-rpg.com-master/src/features/player/reducer.jsx"],"sourcesContent":["import cloneDeep from 'lodash.clonedeep';\n\nconst initialState = {\n    direction: 'SOUTH',\n    position: [0, 0],\n    playerMoved: false,\n    playerAttacked: false,\n    spellCast: false,\n    monsterAttacked: false,\n    playerDied: false,\n    monsterDied: false,\n    targetPosition: [],\n    spell: null,\n    turnsOutOfCombat: 0,\n    monsterUseProjectile: false,\n    monsterProjectileTargetPosition: [],\n    monsterProjectileDirection: '',\n    monsterProjectile: null,\n    effects: {\n        poisoned: {\n            turns: 0,\n            immunityTurns: 0,\n            damage: '0',\n        },\n    },\n};\n\nconst playerReducer = (state = initialState, { type, payload }) => {\n    switch (type) {\n        case 'MONSTER_DIED':\n            // trigger monster's death sound\n            return { ...state, monsterDied: !state.monsterDied };\n\n        case 'PLAYER_DIED':\n            // trigger player's death sound\n            return { ...state, playerDied: !state.playerDied };\n\n        case 'MONSTER_ATTACK':\n            // trigger monster's attack animation on player\n            return {\n                ...state,\n                monsterAttacked: !state.monsterAttacked,\n                turnsOutOfCombat: 0,\n            };\n\n        case 'MONSTER_CAST_SPELL':\n            return {\n                ...state,\n                monsterAttacked: !state.monsterAttacked,\n                turnsOutOfCombat: 0,\n                monsterUseProjectile: !state.monsterUseProjectile,\n                monsterProjectileTargetPosition: payload.position,\n                monsterProjectileDirection: payload.direction,\n                monsterProjectile: payload.spell,\n            };\n\n        case 'SET_ACTIVE_SPELL':\n            return { ...state, spell: cloneDeep(payload.spell) };\n\n        case 'USE_PROJECTILE':\n            return {\n                ...state,\n                playerAttacked: !state.playerAttacked,\n                targetPosition: payload ? payload.position : [],\n                turnsOutOfCombat: 0,\n            };\n\n        case 'MONSTER_USE_PROJECTILE':\n            return {\n                ...state,\n                monsterAttacked: !state.monsterAttacked,\n                turnsOutOfCombat: 0,\n                monsterUseProjectile: !state.monsterUseProjectile,\n                monsterProjectileTargetPosition: payload.position,\n                monsterProjectileDirection: payload.direction,\n                monsterProjectile: payload.projectile,\n            };\n\n        case 'EFFECT_PLAYER': {\n            const { effect, turns, damage, from } = payload;\n\n            return {\n                ...state,\n                effects: {\n                    ...state.effects,\n                    [effect]: {\n                        turns,\n                        immunityTurns: turns * 5,\n                        damage,\n                        from,\n                    },\n                },\n            };\n        }\n\n        case 'CAST_SPELL':\n            return {\n                ...state,\n                spellCast: !state.spellCast,\n                targetPosition: payload ? payload.position : [],\n                turnsOutOfCombat:\n                    payload.projectile.kind === 'combat'\n                        ? 0\n                        : state.turnsOutOfCombat,\n            };\n\n        case 'PLAYER_ATTACK':\n            // trigger attack animation\n            return {\n                ...state,\n                playerAttacked: !state.playerAttacked,\n                turnsOutOfCombat: 0,\n            };\n\n        case 'MOVE_PLAYER':\n            return {\n                ...state,\n                playerMoved: !state.playerMoved,\n                ...payload,\n            };\n\n        case 'TAKE_TURN':\n            Object.keys(state.effects).forEach(effect => {\n                const props = state.effects[effect];\n                state.effects[effect] = {\n                    ...props,\n                    turns: props.turns - 1,\n                    immunityTurns: props.immunityTurns - 1,\n                };\n            });\n            return {\n                ...state,\n                turnsOutOfCombat: state.turnsOutOfCombat + 1,\n            };\n\n        case 'RESET':\n            return initialState;\n\n        case 'LOAD_DATA':\n            return { ...initialState, ...payload.player };\n\n        default:\n            return state;\n    }\n};\n\nexport default playerReducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}