{"ast":null,"code":"import calculateModifier from '../../../utils/calculate-modifier';\nimport calculatePrices from '../../../utils/calculate-prices';\nexport default function sellItem(item) {\n  return (dispatch, getState) => {\n    const {\n      stats\n    } = getState();\n    const {\n      sellPrice\n    } = calculatePrices(item.value, calculateModifier(stats.abilities.charisma));\n    dispatch({\n      type: 'GET_GOLD',\n      payload: sellPrice\n    });\n    dispatch({\n      type: 'SELL_ITEM',\n      payload: item\n    });\n    const {\n      equippedItems\n    } = stats;\n    let itemEquipped = false;\n    // check if the item was equipped, then take it off\n    switch (item.type) {\n      case 'weapon':\n        if (JSON.stringify(equippedItems.weapon) === JSON.stringify(item)) itemEquipped = true;\n        break;\n      case 'ring':\n        if (JSON.stringify(equippedItems.ring) === JSON.stringify(item)) itemEquipped = true;\n        break;\n      case 'armor::body':\n        if (equippedItems.armor && JSON.stringify(equippedItems.armor.body) === JSON.stringify(item)) itemEquipped = true;\n        break;\n      case 'armor::pants':\n        if (equippedItems.armor && JSON.stringify(equippedItems.armor.pants) === JSON.stringify(item)) itemEquipped = true;\n        break;\n      case 'armor::helmet':\n        if (equippedItems.armor && JSON.stringify(equippedItems.armor.helmet) === JSON.stringify(item)) itemEquipped = true;\n        break;\n      case 'armor::boots':\n        if (equippedItems.armor && JSON.stringify(equippedItems.armor.boots) === JSON.stringify(item)) itemEquipped = true;\n        break;\n      case 'armor::gloves':\n        if (equippedItems.armor && JSON.stringify(equippedItems.armor.gloves) === JSON.stringify(item)) itemEquipped = true;\n        break;\n      default:\n    }\n    if (itemEquipped) {\n      dispatch({\n        type: 'UNEQUIP_ITEM',\n        payload: item\n      });\n    }\n  };\n}","map":{"version":3,"names":["calculateModifier","calculatePrices","sellItem","item","dispatch","getState","stats","sellPrice","value","abilities","charisma","type","payload","equippedItems","itemEquipped","JSON","stringify","weapon","ring","armor","body","pants","helmet","boots","gloves"],"sources":["C:/Users/devis/Downloads/react-rpg.com-master/src/features/inventory/actions/sell-item.jsx"],"sourcesContent":["import calculateModifier from '../../../utils/calculate-modifier';\nimport calculatePrices from '../../../utils/calculate-prices';\n\nexport default function sellItem(item) {\n  return (dispatch, getState) => {\n    const { stats } = getState();\n    const { sellPrice } = calculatePrices(item.value, calculateModifier(stats.abilities.charisma));\n\n    dispatch({\n      type: 'GET_GOLD',\n      payload: sellPrice,\n    });\n\n    dispatch({\n      type: 'SELL_ITEM',\n      payload: item,\n    });\n\n    const { equippedItems } = stats;\n    let itemEquipped = false;\n    // check if the item was equipped, then take it off\n    switch (item.type) {\n      case 'weapon':\n        if (JSON.stringify(equippedItems.weapon) === JSON.stringify(item)) itemEquipped = true;\n        break;\n      case 'ring':\n        if (JSON.stringify(equippedItems.ring) === JSON.stringify(item)) itemEquipped = true;\n        break;\n      case 'armor::body':\n        if (\n          equippedItems.armor &&\n          JSON.stringify(equippedItems.armor.body) === JSON.stringify(item)\n        )\n          itemEquipped = true;\n        break;\n      case 'armor::pants':\n        if (\n          equippedItems.armor &&\n          JSON.stringify(equippedItems.armor.pants) === JSON.stringify(item)\n        )\n          itemEquipped = true;\n        break;\n      case 'armor::helmet':\n        if (\n          equippedItems.armor &&\n          JSON.stringify(equippedItems.armor.helmet) === JSON.stringify(item)\n        )\n          itemEquipped = true;\n        break;\n      case 'armor::boots':\n        if (\n          equippedItems.armor &&\n          JSON.stringify(equippedItems.armor.boots) === JSON.stringify(item)\n        )\n          itemEquipped = true;\n        break;\n      case 'armor::gloves':\n        if (\n          equippedItems.armor &&\n          JSON.stringify(equippedItems.armor.gloves) === JSON.stringify(item)\n        )\n          itemEquipped = true;\n        break;\n      default:\n    }\n\n    if (itemEquipped) {\n      dispatch({\n        type: 'UNEQUIP_ITEM',\n        payload: item,\n      });\n    }\n  };\n}\n"],"mappings":"AAAA,OAAOA,iBAAiB,MAAM,mCAAmC;AACjE,OAAOC,eAAe,MAAM,iCAAiC;AAE7D,eAAe,SAASC,QAAQA,CAACC,IAAI,EAAE;EACrC,OAAO,CAACC,QAAQ,EAAEC,QAAQ,KAAK;IAC7B,MAAM;MAAEC;IAAM,CAAC,GAAGD,QAAQ,CAAC,CAAC;IAC5B,MAAM;MAAEE;IAAU,CAAC,GAAGN,eAAe,CAACE,IAAI,CAACK,KAAK,EAAER,iBAAiB,CAACM,KAAK,CAACG,SAAS,CAACC,QAAQ,CAAC,CAAC;IAE9FN,QAAQ,CAAC;MACPO,IAAI,EAAE,UAAU;MAChBC,OAAO,EAAEL;IACX,CAAC,CAAC;IAEFH,QAAQ,CAAC;MACPO,IAAI,EAAE,WAAW;MACjBC,OAAO,EAAET;IACX,CAAC,CAAC;IAEF,MAAM;MAAEU;IAAc,CAAC,GAAGP,KAAK;IAC/B,IAAIQ,YAAY,GAAG,KAAK;IACxB;IACA,QAAQX,IAAI,CAACQ,IAAI;MACf,KAAK,QAAQ;QACX,IAAII,IAAI,CAACC,SAAS,CAACH,aAAa,CAACI,MAAM,CAAC,KAAKF,IAAI,CAACC,SAAS,CAACb,IAAI,CAAC,EAAEW,YAAY,GAAG,IAAI;QACtF;MACF,KAAK,MAAM;QACT,IAAIC,IAAI,CAACC,SAAS,CAACH,aAAa,CAACK,IAAI,CAAC,KAAKH,IAAI,CAACC,SAAS,CAACb,IAAI,CAAC,EAAEW,YAAY,GAAG,IAAI;QACpF;MACF,KAAK,aAAa;QAChB,IACED,aAAa,CAACM,KAAK,IACnBJ,IAAI,CAACC,SAAS,CAACH,aAAa,CAACM,KAAK,CAACC,IAAI,CAAC,KAAKL,IAAI,CAACC,SAAS,CAACb,IAAI,CAAC,EAEjEW,YAAY,GAAG,IAAI;QACrB;MACF,KAAK,cAAc;QACjB,IACED,aAAa,CAACM,KAAK,IACnBJ,IAAI,CAACC,SAAS,CAACH,aAAa,CAACM,KAAK,CAACE,KAAK,CAAC,KAAKN,IAAI,CAACC,SAAS,CAACb,IAAI,CAAC,EAElEW,YAAY,GAAG,IAAI;QACrB;MACF,KAAK,eAAe;QAClB,IACED,aAAa,CAACM,KAAK,IACnBJ,IAAI,CAACC,SAAS,CAACH,aAAa,CAACM,KAAK,CAACG,MAAM,CAAC,KAAKP,IAAI,CAACC,SAAS,CAACb,IAAI,CAAC,EAEnEW,YAAY,GAAG,IAAI;QACrB;MACF,KAAK,cAAc;QACjB,IACED,aAAa,CAACM,KAAK,IACnBJ,IAAI,CAACC,SAAS,CAACH,aAAa,CAACM,KAAK,CAACI,KAAK,CAAC,KAAKR,IAAI,CAACC,SAAS,CAACb,IAAI,CAAC,EAElEW,YAAY,GAAG,IAAI;QACrB;MACF,KAAK,eAAe;QAClB,IACED,aAAa,CAACM,KAAK,IACnBJ,IAAI,CAACC,SAAS,CAACH,aAAa,CAACM,KAAK,CAACK,MAAM,CAAC,KAAKT,IAAI,CAACC,SAAS,CAACb,IAAI,CAAC,EAEnEW,YAAY,GAAG,IAAI;QACrB;MACF;IACF;IAEA,IAAIA,YAAY,EAAE;MAChBV,QAAQ,CAAC;QACPO,IAAI,EAAE,cAAc;QACpBC,OAAO,EAAET;MACX,CAAC,CAAC;IACJ;EACF,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}