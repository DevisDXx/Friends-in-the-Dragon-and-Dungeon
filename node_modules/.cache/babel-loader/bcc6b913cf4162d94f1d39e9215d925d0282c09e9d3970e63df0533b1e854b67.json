{"ast":null,"code":"import _objectSpread from \"C:/Users/devis/Downloads/react-rpg.com-master/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { STARTING_ABILITY_POINTS, STARTING_ABILITY_SCORE_VALUE, MAX_ABILITY_SCORE } from '../../config/constants';\nimport resetAbilityScoreValues from '../../utils/reset-starting-abilities';\nimport setRaceBonus from '../../utils/set-race-bonus';\nconst initialState = {\n  gameText: false,\n  gameOver: false,\n  gameStart: true,\n  gameRunning: false,\n  gameSelect: null,\n  gameType: null,\n  gameWin: false,\n  paused: true,\n  chest: false,\n  chestOpen: false,\n  shop: false,\n  settings: false,\n  inventory: false,\n  journalDialog: false,\n  journalSideMenuOpen: false,\n  spellbookDialog: false,\n  levelUp: false,\n  fromLevelUp: false,\n  abilityDialog: false,\n  characterCustomisation: false,\n  playerOpenedAbilityDialog: false,\n  tutorialDialog: false,\n  tutorialPage: 'movement',\n  diedFrom: null,\n  abilities: {\n    constitution: STARTING_ABILITY_SCORE_VALUE,\n    dexterity: STARTING_ABILITY_SCORE_VALUE,\n    strength: STARTING_ABILITY_SCORE_VALUE,\n    wisdom: STARTING_ABILITY_SCORE_VALUE,\n    intelligence: STARTING_ABILITY_SCORE_VALUE,\n    charisma: STARTING_ABILITY_SCORE_VALUE,\n    points: STARTING_ABILITY_POINTS\n  },\n  appearance: {\n    hairColour: 56,\n    skinColour: 48,\n    eyeColour: 0,\n    armourColour: 230,\n    clothesColour: 190\n  },\n  abilities_minimum: {\n    min_constitution: 0,\n    min_dexterity: 0,\n    min_strength: 0,\n    min_wisdom: 0,\n    min_intelligence: 0,\n    min_charisma: 0\n  },\n  characterCreation: false,\n  character: {\n    characterName: '',\n    characterRace: 'Human',\n    characterClass: 'Fighter'\n  }\n};\nconst dialogManagerReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    abilities,\n    abilities_minimum,\n    character,\n    appearance,\n    tutorialPage\n  } = state;\n  const {\n    constitution,\n    intelligence,\n    strength,\n    dexterity,\n    wisdom,\n    charisma,\n    points\n  } = abilities;\n  const {\n    min_constitution,\n    min_intelligence,\n    min_strength,\n    min_dexterity,\n    min_wisdom,\n    min_charisma\n  } = abilities_minimum;\n  switch (type) {\n    case 'PAUSE':\n      const {\n        shop,\n        chest,\n        gameStart,\n        inventory,\n        gameOver,\n        gameText,\n        gameWin,\n        gameRunning,\n        gameSelect,\n        characterCreation,\n        levelUp,\n        fromLevelUp,\n        abilityDialog,\n        characterCustomisation,\n        playerOpenedAbilityDialog,\n        pause,\n        journalDialog,\n        spellbookDialog,\n        tutorialDialog\n      } = payload;\n      if (journalDialog !== undefined) {\n        state.journalSideMenuOpen = journalDialog;\n      }\n      return _objectSpread(_objectSpread({}, state), {}, {\n        levelUp: levelUp || false,\n        fromLevelUp: fromLevelUp || false,\n        shop: shop || false,\n        chest: chest || false,\n        gameStart: gameStart || false,\n        inventory: inventory || false,\n        gameOver: gameOver || false,\n        gameRunning: gameRunning || state.gameRunning,\n        gameText: gameText || false,\n        gameWin: gameWin || false,\n        gameSelect: gameSelect || null,\n        gameType: gameSelect ? gameSelect : state.gameType,\n        abilityDialog: abilityDialog || false,\n        playerOpenedAbilityDialog: playerOpenedAbilityDialog || false,\n        characterCustomisation: characterCustomisation || false,\n        characterCreation: characterCreation || false,\n        journalDialog: journalDialog || false,\n        spellbookDialog: spellbookDialog || false,\n        tutorialDialog: tutorialDialog || false,\n        paused: pause\n      });\n    case 'PLAYER_DIED':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        diedFrom: payload\n      });\n    case 'SET_SHOW_JOURNAL':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        journalSideMenuOpen: payload\n      });\n    case 'SET_CHEST_DATA':\n      if (payload) {\n        const {\n          gold,\n          exp,\n          item\n        } = payload;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          chestOpen: {\n            gold: gold,\n            exp: exp,\n            item: item\n          }\n        });\n      } else {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          chestOpen: false\n        });\n      }\n    case 'OPEN_SETTINGS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        settings: true\n      });\n    case 'CLOSE_SETTINGS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        settings: false\n      });\n    case 'SET_STORY_MAP':\n      const {\n        direction,\n        currentMap,\n        storyMaps\n      } = payload;\n      const {\n        stairs\n      } = storyMaps[currentMap];\n      const nextMap = stairs[direction];\n      const {\n        message\n      } = storyMaps[nextMap];\n      // if the map has a message and player is going up, display message\n      if (message && direction === 'up') {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          paused: true,\n          gameText: {\n            title: message.title,\n            body: message.body\n          }\n        });\n      }\n      return state;\n    case 'SET_RACE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        character: _objectSpread(_objectSpread({}, character), {}, {\n          characterRace: payload.characterRace\n        })\n      });\n    case 'SET_CLASS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        character: _objectSpread(_objectSpread({}, character), {}, {\n          characterClass: payload.characterClass\n        })\n      });\n    case 'CREATE_CHARACTER':\n      resetAbilityScoreValues(abilities, abilities_minimum);\n      setRaceBonus(character.characterRace, abilities, abilities_minimum);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        character: {\n          characterName: payload.characterName,\n          characterRace: payload.characterRace,\n          characterClass: payload.characterClass\n        }\n      });\n    case 'SET_HAIR_COLOUR':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        appearance: _objectSpread(_objectSpread({}, appearance), {}, {\n          hairColour: payload\n        })\n      });\n    case 'SET_EYE_COLOUR':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        appearance: _objectSpread(_objectSpread({}, appearance), {}, {\n          eyeColour: payload\n        })\n      });\n    case 'SET_SKIN_COLOUR':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        appearance: _objectSpread(_objectSpread({}, appearance), {}, {\n          skinColour: payload\n        })\n      });\n    case 'SET_ARMOUR_COLOUR':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        appearance: _objectSpread(_objectSpread({}, appearance), {}, {\n          armourColour: payload\n        })\n      });\n    case 'SET_CLOTHES_COLOUR':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        appearance: _objectSpread(_objectSpread({}, appearance), {}, {\n          clothesColour: payload\n        })\n      });\n    case 'SET_PLAYER_APPEARANCE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        appearance: _objectSpread(_objectSpread({}, appearance), {}, {\n          hairColour: payload.hairColour,\n          eyeColour: payload.eyeColour,\n          skinColour: payload.skinColour,\n          armourColour: payload.armourColour,\n          clothesColour: payload.clothesColour\n        })\n      });\n    case 'LEVEL_UP_ABILITIES':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        abilities: payload.abilities,\n        abilities_minimum: {\n          min_charisma: payload.abilities.charisma,\n          min_constitution: payload.abilities.constitution,\n          min_strength: payload.abilities.strength,\n          min_intelligence: payload.abilities.intelligence,\n          min_wisdom: payload.abilities.wisdom,\n          min_dexterity: payload.abilities.dexterity\n        }\n      });\n    case 'INCREMENT_CHARISMA':\n      if (points < 1 || charisma >= MAX_ABILITY_SCORE) {\n        return _objectSpread({}, state);\n      }\n      return _objectSpread(_objectSpread({}, state), {}, {\n        abilities: _objectSpread(_objectSpread({}, abilities), {}, {\n          charisma: charisma + 1,\n          points: points - 1\n        })\n      });\n    case 'DECREMENT_CHARISMA':\n      if (charisma <= min_charisma) {\n        return _objectSpread({}, state);\n      }\n      return _objectSpread(_objectSpread({}, state), {}, {\n        abilities: _objectSpread(_objectSpread({}, abilities), {}, {\n          charisma: charisma - 1,\n          points: points + 1\n        })\n      });\n    case 'INCREMENT_CONSTITUTION':\n      if (points < 1 || constitution >= MAX_ABILITY_SCORE) {\n        return _objectSpread({}, state);\n      }\n      return _objectSpread(_objectSpread({}, state), {}, {\n        abilities: _objectSpread(_objectSpread({}, abilities), {}, {\n          constitution: constitution + 1,\n          points: points - 1\n        })\n      });\n    case 'DECREMENT_CONSTITUTION':\n      if (constitution <= min_constitution) {\n        return _objectSpread({}, state);\n      }\n      return _objectSpread(_objectSpread({}, state), {}, {\n        abilities: _objectSpread(_objectSpread({}, abilities), {}, {\n          constitution: constitution - 1,\n          points: points + 1\n        })\n      });\n    case 'INCREMENT_STRENGTH':\n      if (points < 1 || strength >= MAX_ABILITY_SCORE) {\n        return _objectSpread({}, state);\n      }\n      return _objectSpread(_objectSpread({}, state), {}, {\n        abilities: _objectSpread(_objectSpread({}, abilities), {}, {\n          strength: strength + 1,\n          points: points - 1\n        })\n      });\n    case 'DECREMENT_STRENGTH':\n      if (strength <= min_strength) {\n        return _objectSpread({}, state);\n      }\n      return _objectSpread(_objectSpread({}, state), {}, {\n        abilities: _objectSpread(_objectSpread({}, abilities), {}, {\n          strength: strength - 1,\n          points: points + 1\n        })\n      });\n    case 'INCREMENT_WISDOM':\n      if (points < 1 || wisdom >= MAX_ABILITY_SCORE) {\n        return _objectSpread({}, state);\n      }\n      return _objectSpread(_objectSpread({}, state), {}, {\n        abilities: _objectSpread(_objectSpread({}, abilities), {}, {\n          wisdom: wisdom + 1,\n          points: points - 1\n        })\n      });\n    case 'DECREMENT_WISDOM':\n      if (wisdom <= min_wisdom) {\n        return _objectSpread({}, state);\n      }\n      return _objectSpread(_objectSpread({}, state), {}, {\n        abilities: _objectSpread(_objectSpread({}, abilities), {}, {\n          wisdom: wisdom - 1,\n          points: points + 1\n        })\n      });\n    case 'INCREMENT_DEXTERITY':\n      if (points < 1 || dexterity >= MAX_ABILITY_SCORE) {\n        return _objectSpread({}, state);\n      }\n      return _objectSpread(_objectSpread({}, state), {}, {\n        abilities: _objectSpread(_objectSpread({}, abilities), {}, {\n          dexterity: dexterity + 1,\n          points: points - 1\n        })\n      });\n    case 'DECREMENT_DEXTERITY':\n      if (dexterity <= min_dexterity) {\n        return _objectSpread({}, state);\n      }\n      return _objectSpread(_objectSpread({}, state), {}, {\n        abilities: _objectSpread(_objectSpread({}, abilities), {}, {\n          dexterity: dexterity - 1,\n          points: points + 1\n        })\n      });\n    case 'INCREMENT_INTELLIGENCE':\n      if (points < 1 || intelligence >= MAX_ABILITY_SCORE) {\n        return _objectSpread({}, state);\n      }\n      return _objectSpread(_objectSpread({}, state), {}, {\n        abilities: _objectSpread(_objectSpread({}, abilities), {}, {\n          intelligence: intelligence + 1,\n          points: points - 1\n        })\n      });\n    case 'DECREMENT_INTELLIGENCE':\n      if (intelligence <= min_intelligence) {\n        return _objectSpread({}, state);\n      }\n      return _objectSpread(_objectSpread({}, state), {}, {\n        abilities: _objectSpread(_objectSpread({}, abilities), {}, {\n          intelligence: intelligence - 1,\n          points: points + 1\n        })\n      });\n    case 'CHANGE_TUTORIAL_PAGE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        tutorialPage: payload.tutorialPage ? payload.tutorialPage : tutorialPage\n      });\n    case 'RESET':\n      return initialState;\n    case 'LOAD_DATA':\n      return _objectSpread(_objectSpread({}, initialState), payload.dialog);\n    default:\n      return state;\n  }\n};\nexport default dialogManagerReducer;","map":{"version":3,"names":["STARTING_ABILITY_POINTS","STARTING_ABILITY_SCORE_VALUE","MAX_ABILITY_SCORE","resetAbilityScoreValues","setRaceBonus","initialState","gameText","gameOver","gameStart","gameRunning","gameSelect","gameType","gameWin","paused","chest","chestOpen","shop","settings","inventory","journalDialog","journalSideMenuOpen","spellbookDialog","levelUp","fromLevelUp","abilityDialog","characterCustomisation","playerOpenedAbilityDialog","tutorialDialog","tutorialPage","diedFrom","abilities","constitution","dexterity","strength","wisdom","intelligence","charisma","points","appearance","hairColour","skinColour","eyeColour","armourColour","clothesColour","abilities_minimum","min_constitution","min_dexterity","min_strength","min_wisdom","min_intelligence","min_charisma","characterCreation","character","characterName","characterRace","characterClass","dialogManagerReducer","state","arguments","length","undefined","type","payload","pause","_objectSpread","gold","exp","item","direction","currentMap","storyMaps","stairs","nextMap","message","title","body","dialog"],"sources":["C:/Users/devis/Downloads/react-rpg.com-master/src/features/dialog-manager/reducer.jsx"],"sourcesContent":["import {\n  STARTING_ABILITY_POINTS,\n  STARTING_ABILITY_SCORE_VALUE,\n  MAX_ABILITY_SCORE,\n} from '../../config/constants';\nimport resetAbilityScoreValues from '../../utils/reset-starting-abilities';\nimport setRaceBonus from '../../utils/set-race-bonus';\n\nconst initialState = {\n  gameText: false,\n  gameOver: false,\n  gameStart: true,\n  gameRunning: false,\n  gameSelect: null,\n  gameType: null,\n  gameWin: false,\n  paused: true,\n  chest: false,\n  chestOpen: false,\n  shop: false,\n  settings: false,\n  inventory: false,\n  journalDialog: false,\n  journalSideMenuOpen: false,\n  spellbookDialog: false,\n  levelUp: false,\n  fromLevelUp: false,\n  abilityDialog: false,\n  characterCustomisation: false,\n  playerOpenedAbilityDialog: false,\n  tutorialDialog: false,\n  tutorialPage: 'movement',\n  diedFrom: null,\n  abilities: {\n    constitution: STARTING_ABILITY_SCORE_VALUE,\n    dexterity: STARTING_ABILITY_SCORE_VALUE,\n    strength: STARTING_ABILITY_SCORE_VALUE,\n    wisdom: STARTING_ABILITY_SCORE_VALUE,\n    intelligence: STARTING_ABILITY_SCORE_VALUE,\n    charisma: STARTING_ABILITY_SCORE_VALUE,\n    points: STARTING_ABILITY_POINTS,\n  },\n  appearance: {\n    hairColour: 56,\n    skinColour: 48,\n    eyeColour: 0,\n    armourColour: 230,\n    clothesColour: 190,\n  },\n  abilities_minimum: {\n    min_constitution: 0,\n    min_dexterity: 0,\n    min_strength: 0,\n    min_wisdom: 0,\n    min_intelligence: 0,\n    min_charisma: 0,\n  },\n  characterCreation: false,\n  character: {\n    characterName: '',\n    characterRace: 'Human',\n    characterClass: 'Fighter',\n  },\n};\n\nconst dialogManagerReducer = (state = initialState, { type, payload }) => {\n  const { abilities, abilities_minimum, character, appearance, tutorialPage } = state;\n  const { constitution, intelligence, strength, dexterity, wisdom, charisma, points } = abilities;\n\n  const {\n    min_constitution,\n    min_intelligence,\n    min_strength,\n    min_dexterity,\n    min_wisdom,\n    min_charisma,\n  } = abilities_minimum;\n\n  switch (type) {\n    case 'PAUSE':\n      const {\n        shop,\n        chest,\n        gameStart,\n        inventory,\n        gameOver,\n        gameText,\n        gameWin,\n        gameRunning,\n        gameSelect,\n        characterCreation,\n        levelUp,\n        fromLevelUp,\n        abilityDialog,\n        characterCustomisation,\n        playerOpenedAbilityDialog,\n        pause,\n        journalDialog,\n        spellbookDialog,\n        tutorialDialog,\n      } = payload;\n\n      if (journalDialog !== undefined) {\n        state.journalSideMenuOpen = journalDialog;\n      }\n\n      return {\n        ...state,\n        levelUp: levelUp || false,\n        fromLevelUp: fromLevelUp || false,\n        shop: shop || false,\n        chest: chest || false,\n        gameStart: gameStart || false,\n        inventory: inventory || false,\n        gameOver: gameOver || false,\n        gameRunning: gameRunning || state.gameRunning,\n        gameText: gameText || false,\n        gameWin: gameWin || false,\n        gameSelect: gameSelect || null,\n        gameType: gameSelect ? gameSelect : state.gameType,\n        abilityDialog: abilityDialog || false,\n        playerOpenedAbilityDialog: playerOpenedAbilityDialog || false,\n        characterCustomisation: characterCustomisation || false,\n        characterCreation: characterCreation || false,\n        journalDialog: journalDialog || false,\n        spellbookDialog: spellbookDialog || false,\n        tutorialDialog: tutorialDialog || false,\n        paused: pause,\n      };\n\n    case 'PLAYER_DIED':\n      return { ...state, diedFrom: payload };\n\n    case 'SET_SHOW_JOURNAL':\n      return {\n        ...state,\n        journalSideMenuOpen: payload,\n      };\n\n    case 'SET_CHEST_DATA':\n      if (payload) {\n        const { gold, exp, item } = payload;\n        return {\n          ...state,\n          chestOpen: { gold: gold, exp: exp, item: item },\n        };\n      } else {\n        return { ...state, chestOpen: false };\n      }\n    case 'OPEN_SETTINGS':\n      return { ...state, settings: true };\n\n    case 'CLOSE_SETTINGS':\n      return { ...state, settings: false };\n\n    case 'SET_STORY_MAP':\n      const { direction, currentMap, storyMaps } = payload;\n\n      const { stairs } = storyMaps[currentMap];\n\n      const nextMap = stairs[direction];\n\n      const { message } = storyMaps[nextMap];\n      // if the map has a message and player is going up, display message\n      if (message && direction === 'up') {\n        return {\n          ...state,\n          paused: true,\n          gameText: {\n            title: message.title,\n            body: message.body,\n          },\n        };\n      }\n\n      return state;\n\n    case 'SET_RACE':\n      return {\n        ...state,\n        character: {\n          ...character,\n          characterRace: payload.characterRace,\n        },\n      };\n\n    case 'SET_CLASS':\n      return {\n        ...state,\n        character: {\n          ...character,\n          characterClass: payload.characterClass,\n        },\n      };\n\n    case 'CREATE_CHARACTER':\n      resetAbilityScoreValues(abilities, abilities_minimum);\n      setRaceBonus(character.characterRace, abilities, abilities_minimum);\n      return {\n        ...state,\n        character: {\n          characterName: payload.characterName,\n          characterRace: payload.characterRace,\n          characterClass: payload.characterClass,\n        },\n      };\n\n    case 'SET_HAIR_COLOUR':\n      return {\n        ...state,\n        appearance: {\n          ...appearance,\n          hairColour: payload,\n        },\n      };\n\n    case 'SET_EYE_COLOUR':\n      return {\n        ...state,\n        appearance: {\n          ...appearance,\n          eyeColour: payload,\n        },\n      };\n\n    case 'SET_SKIN_COLOUR':\n      return {\n        ...state,\n        appearance: {\n          ...appearance,\n          skinColour: payload,\n        },\n      };\n\n    case 'SET_ARMOUR_COLOUR':\n      return {\n        ...state,\n        appearance: {\n          ...appearance,\n          armourColour: payload,\n        },\n      };\n\n    case 'SET_CLOTHES_COLOUR':\n      return {\n        ...state,\n        appearance: {\n          ...appearance,\n          clothesColour: payload,\n        },\n      };\n\n    case 'SET_PLAYER_APPEARANCE':\n      return {\n        ...state,\n        appearance: {\n          ...appearance,\n          hairColour: payload.hairColour,\n          eyeColour: payload.eyeColour,\n          skinColour: payload.skinColour,\n          armourColour: payload.armourColour,\n          clothesColour: payload.clothesColour,\n        },\n      };\n\n    case 'LEVEL_UP_ABILITIES':\n      return {\n        ...state,\n        abilities: payload.abilities,\n        abilities_minimum: {\n          min_charisma: payload.abilities.charisma,\n          min_constitution: payload.abilities.constitution,\n          min_strength: payload.abilities.strength,\n          min_intelligence: payload.abilities.intelligence,\n          min_wisdom: payload.abilities.wisdom,\n          min_dexterity: payload.abilities.dexterity,\n        },\n      };\n\n    case 'INCREMENT_CHARISMA':\n      if (points < 1 || charisma >= MAX_ABILITY_SCORE) {\n        return { ...state };\n      }\n      return {\n        ...state,\n        abilities: {\n          ...abilities,\n          charisma: charisma + 1,\n          points: points - 1,\n        },\n      };\n    case 'DECREMENT_CHARISMA':\n      if (charisma <= min_charisma) {\n        return { ...state };\n      }\n      return {\n        ...state,\n        abilities: {\n          ...abilities,\n          charisma: charisma - 1,\n          points: points + 1,\n        },\n      };\n    case 'INCREMENT_CONSTITUTION':\n      if (points < 1 || constitution >= MAX_ABILITY_SCORE) {\n        return { ...state };\n      }\n      return {\n        ...state,\n        abilities: {\n          ...abilities,\n          constitution: constitution + 1,\n          points: points - 1,\n        },\n      };\n\n    case 'DECREMENT_CONSTITUTION':\n      if (constitution <= min_constitution) {\n        return { ...state };\n      }\n      return {\n        ...state,\n        abilities: {\n          ...abilities,\n          constitution: constitution - 1,\n          points: points + 1,\n        },\n      };\n\n    case 'INCREMENT_STRENGTH':\n      if (points < 1 || strength >= MAX_ABILITY_SCORE) {\n        return { ...state };\n      }\n      return {\n        ...state,\n        abilities: {\n          ...abilities,\n          strength: strength + 1,\n          points: points - 1,\n        },\n      };\n    case 'DECREMENT_STRENGTH':\n      if (strength <= min_strength) {\n        return { ...state };\n      }\n      return {\n        ...state,\n        abilities: {\n          ...abilities,\n          strength: strength - 1,\n          points: points + 1,\n        },\n      };\n\n    case 'INCREMENT_WISDOM':\n      if (points < 1 || wisdom >= MAX_ABILITY_SCORE) {\n        return { ...state };\n      }\n      return {\n        ...state,\n        abilities: {\n          ...abilities,\n          wisdom: wisdom + 1,\n          points: points - 1,\n        },\n      };\n    case 'DECREMENT_WISDOM':\n      if (wisdom <= min_wisdom) {\n        return { ...state };\n      }\n      return {\n        ...state,\n        abilities: {\n          ...abilities,\n          wisdom: wisdom - 1,\n          points: points + 1,\n        },\n      };\n\n    case 'INCREMENT_DEXTERITY':\n      if (points < 1 || dexterity >= MAX_ABILITY_SCORE) {\n        return { ...state };\n      }\n      return {\n        ...state,\n        abilities: {\n          ...abilities,\n          dexterity: dexterity + 1,\n          points: points - 1,\n        },\n      };\n    case 'DECREMENT_DEXTERITY':\n      if (dexterity <= min_dexterity) {\n        return { ...state };\n      }\n      return {\n        ...state,\n        abilities: {\n          ...abilities,\n          dexterity: dexterity - 1,\n          points: points + 1,\n        },\n      };\n\n    case 'INCREMENT_INTELLIGENCE':\n      if (points < 1 || intelligence >= MAX_ABILITY_SCORE) {\n        return { ...state };\n      }\n      return {\n        ...state,\n        abilities: {\n          ...abilities,\n          intelligence: intelligence + 1,\n          points: points - 1,\n        },\n      };\n    case 'DECREMENT_INTELLIGENCE':\n      if (intelligence <= min_intelligence) {\n        return { ...state };\n      }\n      return {\n        ...state,\n        abilities: {\n          ...abilities,\n          intelligence: intelligence - 1,\n          points: points + 1,\n        },\n      };\n\n    case 'CHANGE_TUTORIAL_PAGE':\n      return {\n        ...state,\n        tutorialPage: payload.tutorialPage ? payload.tutorialPage : tutorialPage,\n      };\n\n    case 'RESET':\n      return initialState;\n\n    case 'LOAD_DATA':\n      return { ...initialState, ...payload.dialog };\n\n    default:\n      return state;\n  }\n};\n\nexport default dialogManagerReducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}