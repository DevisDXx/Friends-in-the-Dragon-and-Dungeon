{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\devis\\\\Downloads\\\\react-rpg.com-master\\\\src\\\\features\\\\monsters\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Monster from './monster';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Monsters = _ref => {\n  _s();\n  let {\n    monsters,\n    world\n  } = _ref;\n  const {\n    currentMap\n  } = world;\n  const [monstersToRender, setMonstersToRender] = useState(null);\n  useEffect(() => {\n    const monsterArray = [];\n    // don't try to load if no maps\n    if (JSON.stringify(monsters.components) === JSON.stringify({})) {\n      setMonstersToRender(null);\n    } else if (monsters.components[currentMap]) {\n      // find each monster on the current map\n      Object.keys(monsters.components[currentMap]).forEach(uuid => {\n        monsterArray.push(/*#__PURE__*/_jsxDEV(Monster, {\n          monster: monsters.components[currentMap][uuid]\n        }, uuid, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this));\n      });\n      setMonstersToRender(monsterArray);\n    }\n  }, [monsters, currentMap]);\n  return monstersToRender;\n};\n_s(Monsters, \"r3Of84fGhtDoOlCfBSsDLx6dDtk=\");\n_c = Monsters;\nconst mapStateToProps = _ref2 => {\n  let {\n    monsters,\n    world\n  } = _ref2;\n  return {\n    monsters,\n    world\n  };\n};\nexport default connect(mapStateToProps)(Monsters);\nvar _c;\n$RefreshReg$(_c, \"Monsters\");","map":{"version":3,"names":["React","useState","useEffect","connect","Monster","jsxDEV","_jsxDEV","Monsters","_ref","_s","monsters","world","currentMap","monstersToRender","setMonstersToRender","monsterArray","JSON","stringify","components","Object","keys","forEach","uuid","push","monster","fileName","_jsxFileName","lineNumber","columnNumber","_c","mapStateToProps","_ref2","$RefreshReg$"],"sources":["C:/Users/devis/Downloads/react-rpg.com-master/src/features/monsters/index.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport Monster from './monster';\n\nconst Monsters = ({ monsters, world }) => {\n    const { currentMap } = world;\n\n    const [monstersToRender, setMonstersToRender] = useState(null);\n\n    useEffect(() => {\n        const monsterArray = [];\n        // don't try to load if no maps\n        if (JSON.stringify(monsters.components) === JSON.stringify({})) {\n            setMonstersToRender(null);\n        } else if (monsters.components[currentMap]) {\n            // find each monster on the current map\n            Object.keys(monsters.components[currentMap]).forEach(uuid => {\n                monsterArray.push(\n                    <Monster\n                        key={uuid}\n                        monster={monsters.components[currentMap][uuid]}\n                    />\n                );\n            });\n\n            setMonstersToRender(monsterArray);\n        }\n    }, [monsters, currentMap]);\n\n    return monstersToRender;\n};\n\nconst mapStateToProps = ({ monsters, world }) => ({ monsters, world });\n\nexport default connect(mapStateToProps)(Monsters);\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,OAAO,QAAQ,aAAa;AAErC,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,QAAQ,GAAGC,IAAA,IAAyB;EAAAC,EAAA;EAAA,IAAxB;IAAEC,QAAQ;IAAEC;EAAM,CAAC,GAAAH,IAAA;EACjC,MAAM;IAAEI;EAAW,CAAC,GAAGD,KAAK;EAE5B,MAAM,CAACE,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAE9DC,SAAS,CAAC,MAAM;IACZ,MAAMa,YAAY,GAAG,EAAE;IACvB;IACA,IAAIC,IAAI,CAACC,SAAS,CAACP,QAAQ,CAACQ,UAAU,CAAC,KAAKF,IAAI,CAACC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE;MAC5DH,mBAAmB,CAAC,IAAI,CAAC;IAC7B,CAAC,MAAM,IAAIJ,QAAQ,CAACQ,UAAU,CAACN,UAAU,CAAC,EAAE;MACxC;MACAO,MAAM,CAACC,IAAI,CAACV,QAAQ,CAACQ,UAAU,CAACN,UAAU,CAAC,CAAC,CAACS,OAAO,CAACC,IAAI,IAAI;QACzDP,YAAY,CAACQ,IAAI,cACbjB,OAAA,CAACF,OAAO;UAEJoB,OAAO,EAAEd,QAAQ,CAACQ,UAAU,CAACN,UAAU,CAAC,CAACU,IAAI;QAAE,GAD1CA,IAAI;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEZ,CACL,CAAC;MACL,CAAC,CAAC;MAEFd,mBAAmB,CAACC,YAAY,CAAC;IACrC;EACJ,CAAC,EAAE,CAACL,QAAQ,EAAEE,UAAU,CAAC,CAAC;EAE1B,OAAOC,gBAAgB;AAC3B,CAAC;AAACJ,EAAA,CA1BIF,QAAQ;AAAAsB,EAAA,GAARtB,QAAQ;AA4Bd,MAAMuB,eAAe,GAAGC,KAAA;EAAA,IAAC;IAAErB,QAAQ;IAAEC;EAAM,CAAC,GAAAoB,KAAA;EAAA,OAAM;IAAErB,QAAQ;IAAEC;EAAM,CAAC;AAAA,CAAC;AAEtE,eAAeR,OAAO,CAAC2B,eAAe,CAAC,CAACvB,QAAQ,CAAC;AAAC,IAAAsB,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}