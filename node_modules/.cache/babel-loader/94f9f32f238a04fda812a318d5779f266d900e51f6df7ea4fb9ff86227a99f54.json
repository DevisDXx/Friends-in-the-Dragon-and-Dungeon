{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\devis\\\\Downloads\\\\react-rpg.com-master\\\\src\\\\features\\\\inventory\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Button from '../../components/button';\nimport toggleInventory from '../dialog-manager/actions/toggle-inventory';\nimport './styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Inventory extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newItemIndicator: false\n    };\n  }\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      inventory\n    } = this.props.dialog;\n    const {\n      itemReceived,\n      itemDropped\n    } = this.props.snackbar;\n    const lastItemReceived = prevProps.snackbar.itemReceived;\n    const lastItemDropped = prevProps.snackbar.itemDropped;\n    if (lastItemDropped !== itemDropped && itemDropped && typeof itemDropped !== 'undefined' && !inventory) {\n      // see if any items were dropped\n      this.setState({\n        newItemIndicator: true\n      });\n    } else if (lastItemReceived !== itemReceived && itemReceived && typeof itemReceived !== 'undefined' && !inventory) {\n      // see if any items were received\n      this.setState({\n        newItemIndicator: true\n      });\n    } else if (inventory && prevState.newItemIndicator) {\n      // see if inventory is opened and there was a new item\n      this.setState({\n        newItemIndicator: false\n      });\n    }\n  }\n  _toggleInventory() {\n    // We can turn off the indicator if the inventory is opened\n    // If we are closing the inventory, it is okay to turn off\n    // indicator since it should be false already\n    this.setState({\n      newItemIndicator: false\n    });\n    this.props.toggleInventory();\n  }\n  render() {\n    const {\n      newItemIndicator\n    } = this.state;\n    const {\n      disabled,\n      dialog,\n      sideMenu\n    } = this.props;\n    const open = dialog.inventory;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-row inventory__container\",\n      children: !disabled && /*#__PURE__*/_jsxDEV(Button, {\n        small: sideMenu,\n        indicator: newItemIndicator,\n        onClick: this._toggleInventory.bind(this),\n        icon: 'briefcase',\n        iconRight: open && 'times',\n        floatIcons: true,\n        title: open ? 'Close' : 'Inventory',\n        style: {\n          width: 180,\n          transition: 'width .25s ease-out',\n          whiteSpace: 'nowrap',\n          overflow: 'hidden',\n          backgroundColor: 'var(--dark-gray)'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n}\nconst mapStateToProps = _ref => {\n  let {\n    snackbar,\n    dialog\n  } = _ref;\n  return {\n    snackbar,\n    dialog\n  };\n};\nconst actions = {\n  toggleInventory\n};\nexport default connect(mapStateToProps, actions)(Inventory);","map":{"version":3,"names":["React","Component","connect","Button","toggleInventory","jsxDEV","_jsxDEV","Inventory","constructor","props","state","newItemIndicator","componentDidUpdate","prevProps","prevState","inventory","dialog","itemReceived","itemDropped","snackbar","lastItemReceived","lastItemDropped","setState","_toggleInventory","render","disabled","sideMenu","open","className","children","small","indicator","onClick","bind","icon","iconRight","floatIcons","title","style","width","transition","whiteSpace","overflow","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","mapStateToProps","_ref","actions"],"sources":["C:/Users/devis/Downloads/react-rpg.com-master/src/features/inventory/index.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Button from '../../components/button';\nimport toggleInventory from '../dialog-manager/actions/toggle-inventory';\n\nimport './styles.scss';\n\nclass Inventory extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      newItemIndicator: false,\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { inventory } = this.props.dialog;\n    const { itemReceived, itemDropped } = this.props.snackbar;\n    const lastItemReceived = prevProps.snackbar.itemReceived;\n    const lastItemDropped = prevProps.snackbar.itemDropped;\n\n    if (\n      lastItemDropped !== itemDropped &&\n      itemDropped &&\n      typeof itemDropped !== 'undefined' &&\n      !inventory\n    ) {\n      // see if any items were dropped\n      this.setState({ newItemIndicator: true });\n    } else if (\n      lastItemReceived !== itemReceived &&\n      itemReceived &&\n      typeof itemReceived !== 'undefined' &&\n      !inventory\n    ) {\n      // see if any items were received\n      this.setState({ newItemIndicator: true });\n    } else if (inventory && prevState.newItemIndicator) {\n      // see if inventory is opened and there was a new item\n      this.setState({ newItemIndicator: false });\n    }\n  }\n\n  _toggleInventory() {\n    // We can turn off the indicator if the inventory is opened\n    // If we are closing the inventory, it is okay to turn off\n    // indicator since it should be false already\n    this.setState({ newItemIndicator: false });\n    this.props.toggleInventory();\n  }\n\n  render() {\n    const { newItemIndicator } = this.state;\n    const { disabled, dialog, sideMenu } = this.props;\n\n    const open = dialog.inventory;\n\n    return (\n      <div className=\"flex-row inventory__container\">\n        {!disabled && (\n          <Button\n            small={sideMenu}\n            indicator={newItemIndicator}\n            onClick={this._toggleInventory.bind(this)}\n            icon={'briefcase'}\n            iconRight={open && 'times'}\n            floatIcons={true}\n            title={open ? 'Close' : 'Inventory'}\n            style={{\n              width: 180,\n              transition: 'width .25s ease-out',\n              whiteSpace: 'nowrap',\n              overflow: 'hidden',\n              backgroundColor: 'var(--dark-gray)',\n            }}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ snackbar, dialog }) => ({ snackbar, dialog });\n\nconst actions = { toggleInventory };\n\nexport default connect(mapStateToProps, actions)(Inventory);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}