{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\devis\\\\Downloads\\\\react-rpg.com-master\\\\src\\\\features\\\\map\\\\map-padding.jsx\";\nimport React from 'react';\nimport { getTileSprite, FogTile } from './map-tile';\nimport { REF_URL, SPRITE_SIZE } from '../../config/constants';\nimport './styles.scss';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MapPadding = _ref => {\n  let {\n    tileType,\n    wallType,\n    tiles,\n    sightBox\n  } = _ref;\n  const PaddingTiles = {};\n  Object.keys(tiles).forEach(direction => {\n    PaddingTiles[direction] = tiles[direction].map((row, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        style: {\n          height: SPRITE_SIZE\n        },\n        children: row.map(rowTile => {\n          return /*#__PURE__*/_jsxDEV(BoundaryTile, {\n            tileType: tileType,\n            wallType: wallType,\n            variation: rowTile.variation,\n            explored: rowTile.explored,\n            sightBox: sightBox,\n            location: rowTile.location\n          }, JSON.stringify(rowTile.location), false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 15\n          }, this);\n        })\n      }, `${direction}-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this);\n    });\n  });\n\n  // we need to mirrow the top rows for them to\n  // render properly with the player's sightbox\n  PaddingTiles.top.reverse();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map__padding--top\",\n      children: PaddingTiles.top\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map__padding--bottom\",\n      children: PaddingTiles.bottom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map__padding--left\",\n      children: PaddingTiles.left\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map__padding--right\",\n      children: PaddingTiles.right\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = MapPadding;\nconst BoundaryTile = _ref2 => {\n  let {\n    tileType,\n    wallType,\n    variation,\n    explored,\n    sightBox,\n    location\n  } = _ref2;\n  let inSight = false;\n  // Load the tile directly from the public folder\n  let tilesrc = new URL(`./${getTileSprite(tileType, variation, wallType)}.png`, REF_URL).href;\n  if (sightBox) {\n    // check the sight box tiles\n    sightBox.forEach(sightBoxTile => {\n      // if the current tile is in range\n      if (JSON.stringify(sightBoxTile) === JSON.stringify(location)) {\n        // remove the overlay\n        return inSight = true;\n      }\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundImage: `url(${tilesrc})`,\n      display: 'inline-flex',\n      height: SPRITE_SIZE,\n      width: SPRITE_SIZE\n    },\n    children: /*#__PURE__*/_jsxDEV(FogTile, {\n      explored: explored,\n      inSight: inSight\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_c2 = BoundaryTile;\nexport default MapPadding;\nvar _c, _c2;\n$RefreshReg$(_c, \"MapPadding\");\n$RefreshReg$(_c2, \"BoundaryTile\");","map":{"version":3,"names":["React","getTileSprite","FogTile","REF_URL","SPRITE_SIZE","jsxDEV","_jsxDEV","Fragment","_Fragment","MapPadding","_ref","tileType","wallType","tiles","sightBox","PaddingTiles","Object","keys","forEach","direction","map","row","index","className","style","height","children","rowTile","BoundaryTile","variation","explored","location","JSON","stringify","fileName","_jsxFileName","lineNumber","columnNumber","top","reverse","bottom","left","right","_c","_ref2","inSight","tilesrc","URL","href","sightBoxTile","backgroundImage","display","width","_c2","$RefreshReg$"],"sources":["C:/Users/devis/Downloads/react-rpg.com-master/src/features/map/map-padding.jsx"],"sourcesContent":["import React from 'react';\n\nimport { getTileSprite, FogTile } from './map-tile';\nimport { REF_URL, SPRITE_SIZE } from '../../config/constants';\n\nimport './styles.scss';\n\nconst MapPadding = ({ tileType, wallType, tiles, sightBox }) => {\n  const PaddingTiles = {};\n\n  Object.keys(tiles).forEach((direction) => {\n    PaddingTiles[direction] = tiles[direction].map((row, index) => {\n      return (\n        <div className=\"row\" style={{ height: SPRITE_SIZE }} key={`${direction}-${index}`}>\n          {row.map((rowTile) => {\n            return (\n              <BoundaryTile\n                tileType={tileType}\n                wallType={wallType}\n                variation={rowTile.variation}\n                explored={rowTile.explored}\n                sightBox={sightBox}\n                location={rowTile.location}\n                key={JSON.stringify(rowTile.location)}\n              />\n            );\n          })}\n        </div>\n      );\n    });\n  });\n\n  // we need to mirrow the top rows for them to\n  // render properly with the player's sightbox\n  PaddingTiles.top.reverse();\n\n  return (\n    <>\n      <div className=\"map__padding--top\">{PaddingTiles.top}</div>\n      <div className=\"map__padding--bottom\">{PaddingTiles.bottom}</div>\n      <div className=\"map__padding--left\">{PaddingTiles.left}</div>\n      <div className=\"map__padding--right\">{PaddingTiles.right}</div>\n    </>\n  );\n};\n\nconst BoundaryTile = ({ tileType, wallType, variation, explored, sightBox, location }) => {\n  let inSight = false;\n  // Load the tile directly from the public folder\n  let tilesrc = new URL(`./${getTileSprite(tileType, variation, wallType)}.png`, REF_URL).href;\n\n  if (sightBox) {\n    // check the sight box tiles\n    sightBox.forEach((sightBoxTile) => {\n      // if the current tile is in range\n      if (JSON.stringify(sightBoxTile) === JSON.stringify(location)) {\n        // remove the overlay\n        return (inSight = true);\n      }\n    });\n  }\n\n  return (\n    <div\n      style={{\n        backgroundImage: `url(${tilesrc})`,\n        display: 'inline-flex',\n        height: SPRITE_SIZE,\n        width: SPRITE_SIZE,\n      }}\n    >\n      <FogTile explored={explored} inSight={inSight} />\n    </div>\n  );\n};\n\nexport default MapPadding;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,aAAa,EAAEC,OAAO,QAAQ,YAAY;AACnD,SAASC,OAAO,EAAEC,WAAW,QAAQ,wBAAwB;AAE7D,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEvB,MAAMC,UAAU,GAAGC,IAAA,IAA6C;EAAA,IAA5C;IAAEC,QAAQ;IAAEC,QAAQ;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAAJ,IAAA;EACzD,MAAMK,YAAY,GAAG,CAAC,CAAC;EAEvBC,MAAM,CAACC,IAAI,CAACJ,KAAK,CAAC,CAACK,OAAO,CAAEC,SAAS,IAAK;IACxCJ,YAAY,CAACI,SAAS,CAAC,GAAGN,KAAK,CAACM,SAAS,CAAC,CAACC,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAK;MAC7D,oBACEhB,OAAA;QAAKiB,SAAS,EAAC,KAAK;QAACC,KAAK,EAAE;UAAEC,MAAM,EAAErB;QAAY,CAAE;QAAAsB,QAAA,EACjDL,GAAG,CAACD,GAAG,CAAEO,OAAO,IAAK;UACpB,oBACErB,OAAA,CAACsB,YAAY;YACXjB,QAAQ,EAAEA,QAAS;YACnBC,QAAQ,EAAEA,QAAS;YACnBiB,SAAS,EAAEF,OAAO,CAACE,SAAU;YAC7BC,QAAQ,EAAEH,OAAO,CAACG,QAAS;YAC3BhB,QAAQ,EAAEA,QAAS;YACnBiB,QAAQ,EAAEJ,OAAO,CAACI;UAAS,GACtBC,IAAI,CAACC,SAAS,CAACN,OAAO,CAACI,QAAQ,CAAC;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtC,CAAC;QAEN,CAAC;MAAC,GAbsD,GAAGlB,SAAS,IAAIG,KAAK,EAAE;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAc5E,CAAC;IAEV,CAAC,CAAC;EACJ,CAAC,CAAC;;EAEF;EACA;EACAtB,YAAY,CAACuB,GAAG,CAACC,OAAO,CAAC,CAAC;EAE1B,oBACEjC,OAAA,CAAAE,SAAA;IAAAkB,QAAA,gBACEpB,OAAA;MAAKiB,SAAS,EAAC,mBAAmB;MAAAG,QAAA,EAAEX,YAAY,CAACuB;IAAG;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC3D/B,OAAA;MAAKiB,SAAS,EAAC,sBAAsB;MAAAG,QAAA,EAAEX,YAAY,CAACyB;IAAM;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACjE/B,OAAA;MAAKiB,SAAS,EAAC,oBAAoB;MAAAG,QAAA,EAAEX,YAAY,CAAC0B;IAAI;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC7D/B,OAAA;MAAKiB,SAAS,EAAC,qBAAqB;MAAAG,QAAA,EAAEX,YAAY,CAAC2B;IAAK;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA,eAC/D,CAAC;AAEP,CAAC;AAACM,EAAA,GArCIlC,UAAU;AAuChB,MAAMmB,YAAY,GAAGgB,KAAA,IAAqE;EAAA,IAApE;IAAEjC,QAAQ;IAAEC,QAAQ;IAAEiB,SAAS;IAAEC,QAAQ;IAAEhB,QAAQ;IAAEiB;EAAS,CAAC,GAAAa,KAAA;EACnF,IAAIC,OAAO,GAAG,KAAK;EACnB;EACA,IAAIC,OAAO,GAAG,IAAIC,GAAG,CAAC,KAAK9C,aAAa,CAACU,QAAQ,EAAEkB,SAAS,EAAEjB,QAAQ,CAAC,MAAM,EAAET,OAAO,CAAC,CAAC6C,IAAI;EAE5F,IAAIlC,QAAQ,EAAE;IACZ;IACAA,QAAQ,CAACI,OAAO,CAAE+B,YAAY,IAAK;MACjC;MACA,IAAIjB,IAAI,CAACC,SAAS,CAACgB,YAAY,CAAC,KAAKjB,IAAI,CAACC,SAAS,CAACF,QAAQ,CAAC,EAAE;QAC7D;QACA,OAAQc,OAAO,GAAG,IAAI;MACxB;IACF,CAAC,CAAC;EACJ;EAEA,oBACEvC,OAAA;IACEkB,KAAK,EAAE;MACL0B,eAAe,EAAE,OAAOJ,OAAO,GAAG;MAClCK,OAAO,EAAE,aAAa;MACtB1B,MAAM,EAAErB,WAAW;MACnBgD,KAAK,EAAEhD;IACT,CAAE;IAAAsB,QAAA,eAEFpB,OAAA,CAACJ,OAAO;MAAC4B,QAAQ,EAAEA,QAAS;MAACe,OAAO,EAAEA;IAAQ;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEV,CAAC;AAACgB,GAAA,GA5BIzB,YAAY;AA8BlB,eAAenB,UAAU;AAAC,IAAAkC,EAAA,EAAAU,GAAA;AAAAC,YAAA,CAAAX,EAAA;AAAAW,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}