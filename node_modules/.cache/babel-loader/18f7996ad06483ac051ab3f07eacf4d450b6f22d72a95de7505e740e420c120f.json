{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\devis\\\\Downloads\\\\react-rpg.com-master\\\\src\\\\features\\\\map\\\\map-padding.jsx\";\nimport React from 'react';\nimport { getTileSprite, FogTile } from './map-tile';\nimport { REF_URL, SPRITE_SIZE } from '../../config/constants';\nimport './styles.scss';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MapPadding = _ref => {\n  let {\n    tileType,\n    wallType,\n    tiles,\n    sightBox\n  } = _ref;\n  const PaddingTiles = {};\n  Object.keys(tiles).forEach(direction => {\n    PaddingTiles[direction] = tiles[direction].map((row, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        style: {\n          height: SPRITE_SIZE\n        },\n        children: row.map(rowTile => {\n          return /*#__PURE__*/_jsxDEV(BoundaryTile, {\n            tileType: tileType,\n            wallType: wallType,\n            variation: rowTile.variation,\n            explored: rowTile.explored,\n            sightBox: sightBox,\n            location: rowTile.location\n          }, JSON.stringify(rowTile.location), false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 29\n          }, this);\n        })\n      }, \"\".concat(direction, \"-\").concat(index), false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this);\n    });\n  });\n\n  // we need to mirrow the top rows for them to\n  // render properly with the player's sightbox\n  PaddingTiles.top.reverse();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map__padding--top\",\n      children: PaddingTiles.top\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map__padding--bottom\",\n      children: PaddingTiles.bottom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map__padding--left\",\n      children: PaddingTiles.left\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map__padding--right\",\n      children: PaddingTiles.right\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_c = MapPadding;\nconst BoundaryTile = _ref2 => {\n  let {\n    tileType,\n    wallType,\n    variation,\n    explored,\n    sightBox,\n    location\n  } = _ref2;\n  let inSight = false;\n  // Load the tile directly from the public folder\n  let tilesrc = new URL(\"./\".concat(getTileSprite(tileType, variation, wallType), \".png\"), REF_URL).href;\n  if (sightBox) {\n    // check the sight box tiles\n    sightBox.forEach(sightBoxTile => {\n      // if the current tile is in range\n      if (JSON.stringify(sightBoxTile) === JSON.stringify(location)) {\n        // remove the overlay\n        return inSight = true;\n      }\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundImage: \"url(\".concat(tilesrc, \")\"),\n      display: 'inline-flex',\n      height: SPRITE_SIZE,\n      width: SPRITE_SIZE\n    },\n    children: /*#__PURE__*/_jsxDEV(FogTile, {\n      explored: explored,\n      inSight: inSight\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n_c2 = BoundaryTile;\nexport default MapPadding;\nvar _c, _c2;\n$RefreshReg$(_c, \"MapPadding\");\n$RefreshReg$(_c2, \"BoundaryTile\");","map":{"version":3,"names":["React","getTileSprite","FogTile","REF_URL","SPRITE_SIZE","jsxDEV","_jsxDEV","Fragment","_Fragment","MapPadding","_ref","tileType","wallType","tiles","sightBox","PaddingTiles","Object","keys","forEach","direction","map","row","index","className","style","height","children","rowTile","BoundaryTile","variation","explored","location","JSON","stringify","fileName","_jsxFileName","lineNumber","columnNumber","concat","top","reverse","bottom","left","right","_c","_ref2","inSight","tilesrc","URL","href","sightBoxTile","backgroundImage","display","width","_c2","$RefreshReg$"],"sources":["C:/Users/devis/Downloads/react-rpg.com-master/src/features/map/map-padding.jsx"],"sourcesContent":["import React from 'react';\n\nimport { getTileSprite, FogTile } from './map-tile';\nimport { REF_URL, SPRITE_SIZE } from '../../config/constants';\n\nimport './styles.scss';\n\nconst MapPadding = ({ tileType, wallType, tiles, sightBox }) => {\n    const PaddingTiles = {};\n\n    Object.keys(tiles).forEach(direction => {\n        PaddingTiles[direction] = tiles[direction].map((row, index) => {\n            return (\n                <div\n                    className=\"row\"\n                    style={{ height: SPRITE_SIZE }}\n                    key={`${direction}-${index}`}\n                >\n                    {row.map(rowTile => {\n                        return (\n                            <BoundaryTile\n                                tileType={tileType}\n                                wallType={wallType}\n                                variation={rowTile.variation}\n                                explored={rowTile.explored}\n                                sightBox={sightBox}\n                                location={rowTile.location}\n                                key={JSON.stringify(rowTile.location)}\n                            />\n                        );\n                    })}\n                </div>\n            );\n        });\n    });\n\n    // we need to mirrow the top rows for them to\n    // render properly with the player's sightbox\n    PaddingTiles.top.reverse();\n\n    return (\n        <>\n            <div className=\"map__padding--top\">{PaddingTiles.top}</div>\n            <div className=\"map__padding--bottom\">{PaddingTiles.bottom}</div>\n            <div className=\"map__padding--left\">{PaddingTiles.left}</div>\n            <div className=\"map__padding--right\">{PaddingTiles.right}</div>\n        </>\n    );\n};\n\nconst BoundaryTile = ({\n    tileType,\n    wallType,\n    variation,\n    explored,\n    sightBox,\n    location,\n}) => {\n    let inSight = false;\n    // Load the tile directly from the public folder\n    let tilesrc = new URL(`./${getTileSprite(\n        tileType,\n        variation,\n        wallType\n    )}.png`, REF_URL).href;\n\n    if (sightBox) {\n        // check the sight box tiles\n        sightBox.forEach(sightBoxTile => {\n            // if the current tile is in range\n            if (JSON.stringify(sightBoxTile) === JSON.stringify(location)) {\n                // remove the overlay\n                return (inSight = true);\n            }\n        });\n    }\n\n    return (\n        <div\n            style={{\n                backgroundImage: `url(${tilesrc})`,\n                display: 'inline-flex',\n                height: SPRITE_SIZE,\n                width: SPRITE_SIZE,\n            }}\n        >\n            <FogTile explored={explored} inSight={inSight} />\n        </div>\n    );\n};\n\nexport default MapPadding;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}