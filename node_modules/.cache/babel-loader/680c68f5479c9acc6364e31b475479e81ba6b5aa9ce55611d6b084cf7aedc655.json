{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\devis\\\\Downloads\\\\react-rpg.com-master\\\\src\\\\features\\\\dialog-manager\\\\dialogs\\\\game-win\\\\index.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Button from '../../../../components/button';\nimport Dialog from '../../../../components/dialog';\nimport resetGameState from '../../../world/actions/reset-game-state';\nimport closeDialog from '../../actions/close-dialog';\nimport './styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameWin = _ref => {\n  let {\n    monsters,\n    resetGameState,\n    closeDialog\n  } = _ref;\n  const {\n    components\n  } = monsters;\n  let numMonstersRemain = 0;\n  // get total monsters by map\n  Object.keys(components).forEach(mapId => {\n    numMonstersRemain += Object.keys(components[mapId]).length;\n  });\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"flex-column game-win__title\",\n      children: 'Congratulations on reaching the sword!'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"flex-column game-win__text\",\n      children: 'The old sword speaks: \"Greetings warrior! I cannot thank you enough for freeing me from the evil spirits. Now I may finally rest...\"'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), numMonstersRemain ? /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"flex-column game-win__text\",\n      children: \"\".concat(numMonstersRemain, \" monster\").concat(numMonstersRemain === 1 ? '' : 's', \" escaped your wrath\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"flex-column game-win__text\",\n      children: \"You killed all of the monsters!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-row game-win__button\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: closeDialog,\n        icon: \"reply\",\n        title: 'Return'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: resetGameState,\n        icon: \"sync\",\n        title: 'Play Again'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_c = GameWin;\nconst mapStateToProps = _ref2 => {\n  let {\n    monsters\n  } = _ref2;\n  return {\n    monsters\n  };\n};\nconst actions = {\n  resetGameState,\n  closeDialog\n};\nexport default connect(mapStateToProps, actions)(GameWin);\nvar _c;\n$RefreshReg$(_c, \"GameWin\");","map":{"version":3,"names":["React","connect","Button","Dialog","resetGameState","closeDialog","jsxDEV","_jsxDEV","GameWin","_ref","monsters","components","numMonstersRemain","Object","keys","forEach","mapId","length","children","className","fileName","_jsxFileName","lineNumber","columnNumber","concat","onClick","icon","title","_c","mapStateToProps","_ref2","actions","$RefreshReg$"],"sources":["C:/Users/devis/Downloads/react-rpg.com-master/src/features/dialog-manager/dialogs/game-win/index.jsx"],"sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport Button from '../../../../components/button';\nimport Dialog from '../../../../components/dialog';\nimport resetGameState from '../../../world/actions/reset-game-state';\nimport closeDialog from '../../actions/close-dialog';\n\nimport './styles.scss';\n\nconst GameWin = ({ monsters, resetGameState, closeDialog }) => {\n    const { components } = monsters;\n    let numMonstersRemain = 0;\n    // get total monsters by map\n    Object.keys(components).forEach(mapId => {\n        numMonstersRemain += Object.keys(components[mapId]).length;\n    });\n\n    return (\n        <Dialog>\n            <span className=\"flex-column game-win__title\">\n                {'Congratulations on reaching the sword!'}\n            </span>\n            <span className=\"flex-column game-win__text\">\n                {\n                    'The old sword speaks: \"Greetings warrior! I cannot thank you enough for freeing me from the evil spirits. Now I may finally rest...\"'\n                }\n            </span>\n            {numMonstersRemain ? (\n                <span className=\"flex-column game-win__text\">\n                    {`${numMonstersRemain} monster${\n                        numMonstersRemain === 1 ? '' : 's'\n                    } escaped your wrath`}\n                </span>\n            ) : (\n                <span className=\"flex-column game-win__text\">\n                    {`You killed all of the monsters!`}\n                </span>\n            )}\n\n            <div className=\"flex-row game-win__button\">\n                <Button onClick={closeDialog} icon=\"reply\" title={'Return'} />\n                <Button\n                    onClick={resetGameState}\n                    icon=\"sync\"\n                    title={'Play Again'}\n                />\n            </div>\n        </Dialog>\n    );\n};\n\nconst mapStateToProps = ({ monsters }) => ({ monsters });\n\nconst actions = { resetGameState, closeDialog };\n\nexport default connect(mapStateToProps, actions)(GameWin);\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,aAAa;AAErC,OAAOC,MAAM,MAAM,+BAA+B;AAClD,OAAOC,MAAM,MAAM,+BAA+B;AAClD,OAAOC,cAAc,MAAM,yCAAyC;AACpE,OAAOC,WAAW,MAAM,4BAA4B;AAEpD,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,OAAO,GAAGC,IAAA,IAA+C;EAAA,IAA9C;IAAEC,QAAQ;IAAEN,cAAc;IAAEC;EAAY,CAAC,GAAAI,IAAA;EACtD,MAAM;IAAEE;EAAW,CAAC,GAAGD,QAAQ;EAC/B,IAAIE,iBAAiB,GAAG,CAAC;EACzB;EACAC,MAAM,CAACC,IAAI,CAACH,UAAU,CAAC,CAACI,OAAO,CAACC,KAAK,IAAI;IACrCJ,iBAAiB,IAAIC,MAAM,CAACC,IAAI,CAACH,UAAU,CAACK,KAAK,CAAC,CAAC,CAACC,MAAM;EAC9D,CAAC,CAAC;EAEF,oBACIV,OAAA,CAACJ,MAAM;IAAAe,QAAA,gBACHX,OAAA;MAAMY,SAAS,EAAC,6BAA6B;MAAAD,QAAA,EACxC;IAAwC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC,eACPhB,OAAA;MAAMY,SAAS,EAAC,4BAA4B;MAAAD,QAAA,EAEpC;IAAsI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAExI,CAAC,EACNX,iBAAiB,gBACdL,OAAA;MAAMY,SAAS,EAAC,4BAA4B;MAAAD,QAAA,KAAAM,MAAA,CACpCZ,iBAAiB,cAAAY,MAAA,CACjBZ,iBAAiB,KAAK,CAAC,GAAG,EAAE,GAAG,GAAG;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEpC,CAAC,gBAEPhB,OAAA;MAAMY,SAAS,EAAC,4BAA4B;MAAAD,QAAA;IAAA;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEtC,CACT,eAEDhB,OAAA;MAAKY,SAAS,EAAC,2BAA2B;MAAAD,QAAA,gBACtCX,OAAA,CAACL,MAAM;QAACuB,OAAO,EAAEpB,WAAY;QAACqB,IAAI,EAAC,OAAO;QAACC,KAAK,EAAE;MAAS;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC9DhB,OAAA,CAACL,MAAM;QACHuB,OAAO,EAAErB,cAAe;QACxBsB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAE;MAAa;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEjB,CAAC;AAACK,EAAA,GAxCIpB,OAAO;AA0Cb,MAAMqB,eAAe,GAAGC,KAAA;EAAA,IAAC;IAAEpB;EAAS,CAAC,GAAAoB,KAAA;EAAA,OAAM;IAAEpB;EAAS,CAAC;AAAA,CAAC;AAExD,MAAMqB,OAAO,GAAG;EAAE3B,cAAc;EAAEC;AAAY,CAAC;AAE/C,eAAeJ,OAAO,CAAC4B,eAAe,EAAEE,OAAO,CAAC,CAACvB,OAAO,CAAC;AAAC,IAAAoB,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}