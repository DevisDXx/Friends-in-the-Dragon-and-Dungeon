{"ast":null,"code":"import _objectSpread from \"C:/Users/devis/Downloads/react-rpg.com-master/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nconst initialState = {\n  notEnoughGold: '',\n  tooManyItems: '',\n  itemDropped: '',\n  itemUsed: '',\n  itemReceived: '',\n  item: null,\n  errorMessage: '',\n  itemSold: ''\n};\nconst snackbarReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n  switch (type) {\n    case 'DAMAGE_TO_MONSTER':\n      if (payload.from !== 'player') {\n        return state;\n      }\n      return _objectSpread(_objectSpread({}, state), {}, {\n        message: payload.damage === 0 ? 'You missed the monster!' : 'You dealt ' + payload.damage + ' damage!'\n      });\n    case 'NOTIFY_PLAYER':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        message: \"\".concat(payload, \"-\").concat(new Date().getTime())\n      });\n    case 'NOT_ENOUGH_GOLD':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        notEnoughGold: \"\".concat(payload.name, \"-\").concat(new Date().getTime()),\n        item: payload\n      });\n    case 'TOO_MANY_ITEMS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        tooManyItems: \"\".concat(payload.name, \"-\").concat(new Date().getTime()),\n        item: payload\n      });\n    case 'GET_ITEM':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        itemReceived: \"\".concat(payload.name, \"-\").concat(new Date().getTime()),\n        item: payload\n      });\n    case 'SELL_ITEM':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        itemSold: \"\".concat(payload.name, \"-\").concat(new Date().getTime()),\n        item: payload\n      });\n    case 'DROP_ITEM':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        itemDropped: \"\".concat(payload.name, \"-\").concat(new Date().getTime()),\n        item: payload\n      });\n    case 'USE_ITEM':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        itemUsed: \"\".concat(payload.name, \"-\").concat(new Date().getTime()),\n        item: payload\n      });\n    case 'CLEAR_NOTIFICATION':\n    case 'RESET':\n      return initialState;\n    case 'LOAD_DATA':\n      return _objectSpread(_objectSpread({}, initialState), payload.snackbar);\n    default:\n      return state;\n  }\n};\nexport default snackbarReducer;","map":{"version":3,"names":["initialState","notEnoughGold","tooManyItems","itemDropped","itemUsed","itemReceived","item","errorMessage","itemSold","snackbarReducer","state","arguments","length","undefined","type","payload","from","_objectSpread","message","damage","concat","Date","getTime","name","snackbar"],"sources":["C:/Users/devis/Downloads/react-rpg.com-master/src/features/snackbar/reducer.jsx"],"sourcesContent":["const initialState = {\n    notEnoughGold: '',\n    tooManyItems: '',\n    itemDropped: '',\n    itemUsed: '',\n    itemReceived: '',\n    item: null,\n    errorMessage: '',\n    itemSold: '',\n};\n\nconst snackbarReducer = (state = initialState, { type, payload }) => {\n    switch (type) {\n        case 'DAMAGE_TO_MONSTER':\n            if (payload.from !== 'player') {\n                return state;\n            }\n\n            return {\n                ...state,\n                message:\n                    payload.damage === 0\n                        ? 'You missed the monster!'\n                        : 'You dealt ' + payload.damage + ' damage!',\n            };\n\n        case 'NOTIFY_PLAYER':\n            return {\n                ...state,\n                message: `${payload}-${new Date().getTime()}`,\n            };\n\n        case 'NOT_ENOUGH_GOLD':\n            return {\n                ...state,\n                notEnoughGold: `${payload.name}-${new Date().getTime()}`,\n                item: payload,\n            };\n\n        case 'TOO_MANY_ITEMS':\n            return {\n                ...state,\n                tooManyItems: `${payload.name}-${new Date().getTime()}`,\n                item: payload,\n            };\n\n        case 'GET_ITEM':\n            return {\n                ...state,\n                itemReceived: `${payload.name}-${new Date().getTime()}`,\n                item: payload,\n            };\n\n        case 'SELL_ITEM':\n            return {\n                ...state,\n                itemSold: `${payload.name}-${new Date().getTime()}`,\n                item: payload,\n            };\n\n        case 'DROP_ITEM':\n            return {\n                ...state,\n                itemDropped: `${payload.name}-${new Date().getTime()}`,\n                item: payload,\n            };\n\n        case 'USE_ITEM':\n            return {\n                ...state,\n                itemUsed: `${payload.name}-${new Date().getTime()}`,\n                item: payload,\n            };\n\n        case 'CLEAR_NOTIFICATION':\n        case 'RESET':\n            return initialState;\n\n        case 'LOAD_DATA':\n            return { ...initialState, ...payload.snackbar };\n\n        default:\n            return state;\n    }\n};\n\nexport default snackbarReducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}