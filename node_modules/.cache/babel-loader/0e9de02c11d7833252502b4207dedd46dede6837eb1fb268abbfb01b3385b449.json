{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\devis\\\\Downloads\\\\react-rpg.com-master\\\\src\\\\features\\\\dialog-manager\\\\dialogs\\\\game-win\\\\index.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Button from '../../../../components/button';\nimport Dialog from '../../../../components/dialog';\nimport resetGameState from '../../../world/actions/reset-game-state';\nimport closeDialog from '../../actions/close-dialog';\nimport './styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameWin = _ref => {\n  let {\n    monsters,\n    resetGameState,\n    closeDialog\n  } = _ref;\n  const {\n    components\n  } = monsters;\n  let numMonstersRemain = 0;\n  // get total monsters by map\n  Object.keys(components).forEach(mapId => {\n    numMonstersRemain += Object.keys(components[mapId]).length;\n  });\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"flex-column game-win__title\",\n      children: 'Congratulations on reaching the sword!'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"flex-column game-win__text\",\n      children: 'The old sword speaks: \"Greetings warrior! I cannot thank you enough for freeing me from the evil spirits. Now I may finally rest...\"'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), numMonstersRemain ? /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"flex-column game-win__text\",\n      children: `${numMonstersRemain} monster${numMonstersRemain === 1 ? '' : 's'} escaped your wrath`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"flex-column game-win__text\",\n      children: `You killed all of the monsters!`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-row game-win__button\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: closeDialog,\n        icon: \"reply\",\n        title: 'Return'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: resetGameState,\n        icon: \"sync\",\n        title: 'Play Again'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_c = GameWin;\nconst mapStateToProps = _ref2 => {\n  let {\n    monsters\n  } = _ref2;\n  return {\n    monsters\n  };\n};\nconst actions = {\n  resetGameState,\n  closeDialog\n};\nexport default connect(mapStateToProps, actions)(GameWin);\nvar _c;\n$RefreshReg$(_c, \"GameWin\");","map":{"version":3,"names":["React","connect","Button","Dialog","resetGameState","closeDialog","jsxDEV","_jsxDEV","GameWin","_ref","monsters","components","numMonstersRemain","Object","keys","forEach","mapId","length","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","icon","title","_c","mapStateToProps","_ref2","actions","$RefreshReg$"],"sources":["C:/Users/devis/Downloads/react-rpg.com-master/src/features/dialog-manager/dialogs/game-win/index.jsx"],"sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport Button from '../../../../components/button';\nimport Dialog from '../../../../components/dialog';\nimport resetGameState from '../../../world/actions/reset-game-state';\nimport closeDialog from '../../actions/close-dialog';\n\nimport './styles.scss';\n\nconst GameWin = ({ monsters, resetGameState, closeDialog }) => {\n  const { components } = monsters;\n  let numMonstersRemain = 0;\n  // get total monsters by map\n  Object.keys(components).forEach((mapId) => {\n    numMonstersRemain += Object.keys(components[mapId]).length;\n  });\n\n  return (\n    <Dialog>\n      <span className=\"flex-column game-win__title\">\n        {'Congratulations on reaching the sword!'}\n      </span>\n      <span className=\"flex-column game-win__text\">\n        {\n          'The old sword speaks: \"Greetings warrior! I cannot thank you enough for freeing me from the evil spirits. Now I may finally rest...\"'\n        }\n      </span>\n      {numMonstersRemain ? (\n        <span className=\"flex-column game-win__text\">\n          {`${numMonstersRemain} monster${numMonstersRemain === 1 ? '' : 's'} escaped your wrath`}\n        </span>\n      ) : (\n        <span className=\"flex-column game-win__text\">{`You killed all of the monsters!`}</span>\n      )}\n\n      <div className=\"flex-row game-win__button\">\n        <Button onClick={closeDialog} icon=\"reply\" title={'Return'} />\n        <Button onClick={resetGameState} icon=\"sync\" title={'Play Again'} />\n      </div>\n    </Dialog>\n  );\n};\n\nconst mapStateToProps = ({ monsters }) => ({ monsters });\n\nconst actions = { resetGameState, closeDialog };\n\nexport default connect(mapStateToProps, actions)(GameWin);\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,aAAa;AAErC,OAAOC,MAAM,MAAM,+BAA+B;AAClD,OAAOC,MAAM,MAAM,+BAA+B;AAClD,OAAOC,cAAc,MAAM,yCAAyC;AACpE,OAAOC,WAAW,MAAM,4BAA4B;AAEpD,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,OAAO,GAAGC,IAAA,IAA+C;EAAA,IAA9C;IAAEC,QAAQ;IAAEN,cAAc;IAAEC;EAAY,CAAC,GAAAI,IAAA;EACxD,MAAM;IAAEE;EAAW,CAAC,GAAGD,QAAQ;EAC/B,IAAIE,iBAAiB,GAAG,CAAC;EACzB;EACAC,MAAM,CAACC,IAAI,CAACH,UAAU,CAAC,CAACI,OAAO,CAAEC,KAAK,IAAK;IACzCJ,iBAAiB,IAAIC,MAAM,CAACC,IAAI,CAACH,UAAU,CAACK,KAAK,CAAC,CAAC,CAACC,MAAM;EAC5D,CAAC,CAAC;EAEF,oBACEV,OAAA,CAACJ,MAAM;IAAAe,QAAA,gBACLX,OAAA;MAAMY,SAAS,EAAC,6BAA6B;MAAAD,QAAA,EAC1C;IAAwC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,eACPhB,OAAA;MAAMY,SAAS,EAAC,4BAA4B;MAAAD,QAAA,EAExC;IAAsI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEpI,CAAC,EACNX,iBAAiB,gBAChBL,OAAA;MAAMY,SAAS,EAAC,4BAA4B;MAAAD,QAAA,EACzC,GAAGN,iBAAiB,WAAWA,iBAAiB,KAAK,CAAC,GAAG,EAAE,GAAG,GAAG;IAAqB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnF,CAAC,gBAEPhB,OAAA;MAAMY,SAAS,EAAC,4BAA4B;MAAAD,QAAA,EAAE;IAAiC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CACvF,eAEDhB,OAAA;MAAKY,SAAS,EAAC,2BAA2B;MAAAD,QAAA,gBACxCX,OAAA,CAACL,MAAM;QAACsB,OAAO,EAAEnB,WAAY;QAACoB,IAAI,EAAC,OAAO;QAACC,KAAK,EAAE;MAAS;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC9DhB,OAAA,CAACL,MAAM;QAACsB,OAAO,EAAEpB,cAAe;QAACqB,IAAI,EAAC,MAAM;QAACC,KAAK,EAAE;MAAa;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb,CAAC;AAACI,EAAA,GAhCInB,OAAO;AAkCb,MAAMoB,eAAe,GAAGC,KAAA;EAAA,IAAC;IAAEnB;EAAS,CAAC,GAAAmB,KAAA;EAAA,OAAM;IAAEnB;EAAS,CAAC;AAAA,CAAC;AAExD,MAAMoB,OAAO,GAAG;EAAE1B,cAAc;EAAEC;AAAY,CAAC;AAE/C,eAAeJ,OAAO,CAAC2B,eAAe,EAAEE,OAAO,CAAC,CAACtB,OAAO,CAAC;AAAC,IAAAmB,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}