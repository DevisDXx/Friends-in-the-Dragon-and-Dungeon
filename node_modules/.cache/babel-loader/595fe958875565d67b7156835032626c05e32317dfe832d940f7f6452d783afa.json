{"ast":null,"code":"const initialState = {\n  notEnoughGold: '',\n  tooManyItems: '',\n  itemDropped: '',\n  itemUsed: '',\n  itemReceived: '',\n  item: null,\n  errorMessage: '',\n  itemSold: ''\n};\nconst snackbarReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n  switch (type) {\n    case 'DAMAGE_TO_MONSTER':\n      if (payload.from !== 'player') {\n        return state;\n      }\n      return {\n        ...state,\n        message: payload.damage === 0 ? 'You missed the monster!' : 'You dealt ' + payload.damage + ' damage!'\n      };\n    case 'NOTIFY_PLAYER':\n      return {\n        ...state,\n        message: `${payload}-${new Date().getTime()}`\n      };\n    case 'NOT_ENOUGH_GOLD':\n      return {\n        ...state,\n        notEnoughGold: `${payload.name}-${new Date().getTime()}`,\n        item: payload\n      };\n    case 'TOO_MANY_ITEMS':\n      return {\n        ...state,\n        tooManyItems: `${payload.name}-${new Date().getTime()}`,\n        item: payload\n      };\n    case 'GET_ITEM':\n      return {\n        ...state,\n        itemReceived: `${payload.name}-${new Date().getTime()}`,\n        item: payload\n      };\n    case 'SELL_ITEM':\n      return {\n        ...state,\n        itemSold: `${payload.name}-${new Date().getTime()}`,\n        item: payload\n      };\n    case 'DROP_ITEM':\n      return {\n        ...state,\n        itemDropped: `${payload.name}-${new Date().getTime()}`,\n        item: payload\n      };\n    case 'USE_ITEM':\n      return {\n        ...state,\n        itemUsed: `${payload.name}-${new Date().getTime()}`,\n        item: payload\n      };\n    case 'CLEAR_NOTIFICATION':\n    case 'RESET':\n      return initialState;\n    case 'LOAD_DATA':\n      return {\n        ...initialState,\n        ...payload.snackbar\n      };\n    default:\n      return state;\n  }\n};\nexport default snackbarReducer;","map":{"version":3,"names":["initialState","notEnoughGold","tooManyItems","itemDropped","itemUsed","itemReceived","item","errorMessage","itemSold","snackbarReducer","state","arguments","length","undefined","type","payload","from","message","damage","Date","getTime","name","snackbar"],"sources":["C:/Users/devis/Downloads/react-rpg.com-master/src/features/snackbar/reducer.jsx"],"sourcesContent":["const initialState = {\n  notEnoughGold: '',\n  tooManyItems: '',\n  itemDropped: '',\n  itemUsed: '',\n  itemReceived: '',\n  item: null,\n  errorMessage: '',\n  itemSold: '',\n};\n\nconst snackbarReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case 'DAMAGE_TO_MONSTER':\n      if (payload.from !== 'player') {\n        return state;\n      }\n\n      return {\n        ...state,\n        message:\n          payload.damage === 0\n            ? 'You missed the monster!'\n            : 'You dealt ' + payload.damage + ' damage!',\n      };\n\n    case 'NOTIFY_PLAYER':\n      return {\n        ...state,\n        message: `${payload}-${new Date().getTime()}`,\n      };\n\n    case 'NOT_ENOUGH_GOLD':\n      return {\n        ...state,\n        notEnoughGold: `${payload.name}-${new Date().getTime()}`,\n        item: payload,\n      };\n\n    case 'TOO_MANY_ITEMS':\n      return {\n        ...state,\n        tooManyItems: `${payload.name}-${new Date().getTime()}`,\n        item: payload,\n      };\n\n    case 'GET_ITEM':\n      return {\n        ...state,\n        itemReceived: `${payload.name}-${new Date().getTime()}`,\n        item: payload,\n      };\n\n    case 'SELL_ITEM':\n      return {\n        ...state,\n        itemSold: `${payload.name}-${new Date().getTime()}`,\n        item: payload,\n      };\n\n    case 'DROP_ITEM':\n      return {\n        ...state,\n        itemDropped: `${payload.name}-${new Date().getTime()}`,\n        item: payload,\n      };\n\n    case 'USE_ITEM':\n      return {\n        ...state,\n        itemUsed: `${payload.name}-${new Date().getTime()}`,\n        item: payload,\n      };\n\n    case 'CLEAR_NOTIFICATION':\n    case 'RESET':\n      return initialState;\n\n    case 'LOAD_DATA':\n      return { ...initialState, ...payload.snackbar };\n\n    default:\n      return state;\n  }\n};\n\nexport default snackbarReducer;\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG;EACnBC,aAAa,EAAE,EAAE;EACjBC,YAAY,EAAE,EAAE;EAChBC,WAAW,EAAE,EAAE;EACfC,QAAQ,EAAE,EAAE;EACZC,YAAY,EAAE,EAAE;EAChBC,IAAI,EAAE,IAAI;EACVC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE;AACZ,CAAC;AAED,MAAMC,eAAe,GAAG,SAAAA,CAAA,EAA6C;EAAA,IAA5CC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGX,YAAY;EAAA,IAAE;IAAEc,IAAI;IAAEC;EAAQ,CAAC,GAAAJ,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC9D,QAAQC,IAAI;IACV,KAAK,mBAAmB;MACtB,IAAIC,OAAO,CAACC,IAAI,KAAK,QAAQ,EAAE;QAC7B,OAAON,KAAK;MACd;MAEA,OAAO;QACL,GAAGA,KAAK;QACRO,OAAO,EACLF,OAAO,CAACG,MAAM,KAAK,CAAC,GAChB,yBAAyB,GACzB,YAAY,GAAGH,OAAO,CAACG,MAAM,GAAG;MACxC,CAAC;IAEH,KAAK,eAAe;MAClB,OAAO;QACL,GAAGR,KAAK;QACRO,OAAO,EAAE,GAAGF,OAAO,IAAI,IAAII,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;MAC7C,CAAC;IAEH,KAAK,iBAAiB;MACpB,OAAO;QACL,GAAGV,KAAK;QACRT,aAAa,EAAE,GAAGc,OAAO,CAACM,IAAI,IAAI,IAAIF,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,EAAE;QACxDd,IAAI,EAAES;MACR,CAAC;IAEH,KAAK,gBAAgB;MACnB,OAAO;QACL,GAAGL,KAAK;QACRR,YAAY,EAAE,GAAGa,OAAO,CAACM,IAAI,IAAI,IAAIF,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,EAAE;QACvDd,IAAI,EAAES;MACR,CAAC;IAEH,KAAK,UAAU;MACb,OAAO;QACL,GAAGL,KAAK;QACRL,YAAY,EAAE,GAAGU,OAAO,CAACM,IAAI,IAAI,IAAIF,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,EAAE;QACvDd,IAAI,EAAES;MACR,CAAC;IAEH,KAAK,WAAW;MACd,OAAO;QACL,GAAGL,KAAK;QACRF,QAAQ,EAAE,GAAGO,OAAO,CAACM,IAAI,IAAI,IAAIF,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,EAAE;QACnDd,IAAI,EAAES;MACR,CAAC;IAEH,KAAK,WAAW;MACd,OAAO;QACL,GAAGL,KAAK;QACRP,WAAW,EAAE,GAAGY,OAAO,CAACM,IAAI,IAAI,IAAIF,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,EAAE;QACtDd,IAAI,EAAES;MACR,CAAC;IAEH,KAAK,UAAU;MACb,OAAO;QACL,GAAGL,KAAK;QACRN,QAAQ,EAAE,GAAGW,OAAO,CAACM,IAAI,IAAI,IAAIF,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,EAAE;QACnDd,IAAI,EAAES;MACR,CAAC;IAEH,KAAK,oBAAoB;IACzB,KAAK,OAAO;MACV,OAAOf,YAAY;IAErB,KAAK,WAAW;MACd,OAAO;QAAE,GAAGA,YAAY;QAAE,GAAGe,OAAO,CAACO;MAAS,CAAC;IAEjD;MACE,OAAOZ,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}