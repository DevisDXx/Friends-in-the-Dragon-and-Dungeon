{"ast":null,"code":"import { spriteToCoordinates } from '../../../utils/sprite-to-coordinates';\nexport default function pickupItem() {\n  return (dispatch, getState) => {\n    const {\n      inventory,\n      dialog,\n      player\n    } = getState();\n    const {\n      item\n    } = dialog.chestOpen;\n    if (!item) return;\n    const {\n      items,\n      maxItems\n    } = inventory;\n    const {\n      x,\n      y\n    } = spriteToCoordinates(player.position);\n    if (items.length < maxItems) {\n      // The item has now been taken, so make sure it gets deleted\n      dispatch({\n        type: 'SET_CHEST_DATA',\n        payload: {\n          exp: 0,\n          gold: 0,\n          item: null,\n          x: x,\n          y: y\n        }\n      });\n      dispatch({\n        type: 'GET_ITEM',\n        payload: item\n      });\n    } else {\n      // The item now needs to stay in the chest, so put it there\n      dispatch({\n        type: 'SET_CHEST_DATA',\n        payload: {\n          exp: 0,\n          gold: 0,\n          item: item,\n          x: x,\n          y: y\n        }\n      });\n      dispatch({\n        type: 'TOO_MANY_ITEMS',\n        payload: item\n      });\n    }\n  };\n}","map":{"version":3,"names":["spriteToCoordinates","pickupItem","dispatch","getState","inventory","dialog","player","item","chestOpen","items","maxItems","x","y","position","length","type","payload","exp","gold"],"sources":["C:/Users/devis/Downloads/react-rpg.com-master/src/features/inventory/actions/pickup-item.jsx"],"sourcesContent":["import { spriteToCoordinates } from '../../../utils/sprite-to-coordinates';\n\nexport default function pickupItem() {\n    return (dispatch, getState) => {\n        const { inventory, dialog, player } = getState();\n\n        const { item } = dialog.chestOpen;\n\n        if (!item) return;\n\n        const { items, maxItems } = inventory;\n        const { x, y } = spriteToCoordinates(player.position);\n\n        if (items.length < maxItems) {\n            // The item has now been taken, so make sure it gets deleted\n            dispatch({\n                type: 'SET_CHEST_DATA',\n                payload: {\n                    exp: 0,\n                    gold: 0,\n                    item: null,\n                    x: x,\n                    y: y,\n                },\n            });\n            dispatch({\n                type: 'GET_ITEM',\n                payload: item,\n            });\n        } else {\n            // The item now needs to stay in the chest, so put it there\n            dispatch({\n                type: 'SET_CHEST_DATA',\n                payload: {\n                    exp: 0,\n                    gold: 0,\n                    item: item,\n                    x: x,\n                    y: y,\n                },\n            });\n            dispatch({\n                type: 'TOO_MANY_ITEMS',\n                payload: item,\n            });\n        }\n    };\n}\n"],"mappings":"AAAA,SAASA,mBAAmB,QAAQ,sCAAsC;AAE1E,eAAe,SAASC,UAAUA,CAAA,EAAG;EACjC,OAAO,CAACC,QAAQ,EAAEC,QAAQ,KAAK;IAC3B,MAAM;MAAEC,SAAS;MAAEC,MAAM;MAAEC;IAAO,CAAC,GAAGH,QAAQ,CAAC,CAAC;IAEhD,MAAM;MAAEI;IAAK,CAAC,GAAGF,MAAM,CAACG,SAAS;IAEjC,IAAI,CAACD,IAAI,EAAE;IAEX,MAAM;MAAEE,KAAK;MAAEC;IAAS,CAAC,GAAGN,SAAS;IACrC,MAAM;MAAEO,CAAC;MAAEC;IAAE,CAAC,GAAGZ,mBAAmB,CAACM,MAAM,CAACO,QAAQ,CAAC;IAErD,IAAIJ,KAAK,CAACK,MAAM,GAAGJ,QAAQ,EAAE;MACzB;MACAR,QAAQ,CAAC;QACLa,IAAI,EAAE,gBAAgB;QACtBC,OAAO,EAAE;UACLC,GAAG,EAAE,CAAC;UACNC,IAAI,EAAE,CAAC;UACPX,IAAI,EAAE,IAAI;UACVI,CAAC,EAAEA,CAAC;UACJC,CAAC,EAAEA;QACP;MACJ,CAAC,CAAC;MACFV,QAAQ,CAAC;QACLa,IAAI,EAAE,UAAU;QAChBC,OAAO,EAAET;MACb,CAAC,CAAC;IACN,CAAC,MAAM;MACH;MACAL,QAAQ,CAAC;QACLa,IAAI,EAAE,gBAAgB;QACtBC,OAAO,EAAE;UACLC,GAAG,EAAE,CAAC;UACNC,IAAI,EAAE,CAAC;UACPX,IAAI,EAAEA,IAAI;UACVI,CAAC,EAAEA,CAAC;UACJC,CAAC,EAAEA;QACP;MACJ,CAAC,CAAC;MACFV,QAAQ,CAAC;QACLa,IAAI,EAAE,gBAAgB;QACtBC,OAAO,EAAET;MACb,CAAC,CAAC;IACN;EACJ,CAAC;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}