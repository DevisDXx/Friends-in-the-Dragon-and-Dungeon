{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\devis\\\\Downloads\\\\react-rpg.com-master\\\\src\\\\features\\\\map\\\\map-tile.jsx\";\nimport React from 'react';\nimport Flame from '../../components/flame';\nimport { SPRITE_SIZE, REF_URL } from '../../config/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapTile = _ref => {\n  let {\n    tile,\n    wallType,\n    index,\n    sightBox\n  } = _ref;\n  let inSight = false;\n  // Load the tile directly from the public folder\n  let tilesrc = new URL(\"./\".concat(getTileSprite(tile.value, tile.variation, wallType), \".png\"), REF_URL).href;\n  // if you need to render the sightBox\n  if (sightBox) {\n    // check the sight box tiles\n    sightBox.forEach(sightValue => {\n      // if the current tile is in range\n      if (JSON.stringify(sightValue) === JSON.stringify(index)) {\n        // remove the overlay\n        return inSight = true;\n      }\n    });\n  }\n  // case for rendering animated flame tile\n  if (tile.value === 6) {\n    return /*#__PURE__*/_jsxDEV(GroundTile, {\n      variation: tile.variation,\n      children: /*#__PURE__*/_jsxDEV(Flame, {\n        position: index,\n        children: /*#__PURE__*/_jsxDEV(FogTile, {\n          explored: tile.explored,\n          inSight: inSight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n  // case for rendering normal tiles\n  return /*#__PURE__*/_jsxDEV(GroundTile, {\n    variation: tile.variation,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundImage: \"url(\".concat(tilesrc),\n        height: SPRITE_SIZE,\n        width: SPRITE_SIZE\n      },\n      children: /*#__PURE__*/_jsxDEV(FogTile, {\n        explored: tile.explored,\n        inSight: inSight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_c = MapTile;\nexport function getTileSprite(type, variation, wallType) {\n  switch (type) {\n    case -2:\n      return 'chest-open';\n    case -1:\n      return 'blood-splatter';\n    case 0:\n      return \"ground-\".concat(variation);\n    case 2:\n      return 'stairs-down';\n    case 3:\n      return 'stairs-up';\n    case 4:\n      return 'chest';\n    case 5:\n      return \"walls/\".concat(wallType, \"/\").concat(wallType, \"-\").concat(variation);\n    // case 6:\n    // fire\n    case 9:\n      return 'shop';\n    case 10:\n      return 'shrine';\n    default:\n  }\n}\nexport const FogTile = _ref2 => {\n  let {\n    inSight,\n    explored\n  } = _ref2;\n  // show the tile by default\n  let opacity = '0';\n  // if the tile is out of sight, show faded\n  if (!inSight) opacity = '0.5';\n  // if the tile is unexplored, hide it\n  if (!explored) opacity = '1';\n  // render fog tiles\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: '#000',\n      opacity,\n      display: 'inline-flex',\n      height: SPRITE_SIZE,\n      width: SPRITE_SIZE,\n      transition: 'opacity .5s linear'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_c2 = FogTile;\nconst GroundTile = _ref3 => {\n  let {\n    variation,\n    children\n  } = _ref3;\n  // Load the tile directly from the public folder\n  let tilesrc = new URL(\"./ground-\".concat(variation, \".png\"), REF_URL).href;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundImage: \"url(\".concat(tilesrc, \")\"),\n      display: 'inline-flex',\n      height: SPRITE_SIZE,\n      width: SPRITE_SIZE\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_c3 = GroundTile;\nexport default MapTile;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"MapTile\");\n$RefreshReg$(_c2, \"FogTile\");\n$RefreshReg$(_c3, \"GroundTile\");","map":{"version":3,"names":["React","Flame","SPRITE_SIZE","REF_URL","jsxDEV","_jsxDEV","MapTile","_ref","tile","wallType","index","sightBox","inSight","tilesrc","URL","concat","getTileSprite","value","variation","href","forEach","sightValue","JSON","stringify","GroundTile","children","position","FogTile","explored","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundImage","height","width","_c","type","_ref2","opacity","backgroundColor","display","transition","_c2","_ref3","_c3","$RefreshReg$"],"sources":["C:/Users/devis/Downloads/react-rpg.com-master/src/features/map/map-tile.jsx"],"sourcesContent":["import React from 'react';\n\nimport Flame from '../../components/flame';\nimport { SPRITE_SIZE, REF_URL } from '../../config/constants';\n\nconst MapTile = ({ tile, wallType, index, sightBox }) => {\n  let inSight = false;\n  // Load the tile directly from the public folder\n  let tilesrc = new URL(`./${getTileSprite(tile.value, tile.variation, wallType)}.png`, REF_URL)\n    .href;\n  // if you need to render the sightBox\n  if (sightBox) {\n    // check the sight box tiles\n    sightBox.forEach((sightValue) => {\n      // if the current tile is in range\n      if (JSON.stringify(sightValue) === JSON.stringify(index)) {\n        // remove the overlay\n        return (inSight = true);\n      }\n    });\n  }\n  // case for rendering animated flame tile\n  if (tile.value === 6) {\n    return (\n      <GroundTile variation={tile.variation}>\n        <Flame position={index}>\n          <FogTile explored={tile.explored} inSight={inSight} />\n        </Flame>\n      </GroundTile>\n    );\n  }\n  // case for rendering normal tiles\n  return (\n    <GroundTile variation={tile.variation}>\n      <div\n        style={{\n          backgroundImage: `url(${tilesrc}`,\n          height: SPRITE_SIZE,\n          width: SPRITE_SIZE,\n        }}\n      >\n        <FogTile explored={tile.explored} inSight={inSight} />\n      </div>\n    </GroundTile>\n  );\n};\n\nexport function getTileSprite(type, variation, wallType) {\n  switch (type) {\n    case -2:\n      return 'chest-open';\n    case -1:\n      return 'blood-splatter';\n    case 0:\n      return `ground-${variation}`;\n    case 2:\n      return 'stairs-down';\n    case 3:\n      return 'stairs-up';\n    case 4:\n      return 'chest';\n    case 5:\n      return `walls/${wallType}/${wallType}-${variation}`;\n    // case 6:\n    // fire\n    case 9:\n      return 'shop';\n    case 10:\n      return 'shrine';\n    default:\n  }\n}\n\nexport const FogTile = ({ inSight, explored }) => {\n  // show the tile by default\n  let opacity = '0';\n  // if the tile is out of sight, show faded\n  if (!inSight) opacity = '0.5';\n  // if the tile is unexplored, hide it\n  if (!explored) opacity = '1';\n  // render fog tiles\n  return (\n    <div\n      style={{\n        backgroundColor: '#000',\n        opacity,\n        display: 'inline-flex',\n        height: SPRITE_SIZE,\n        width: SPRITE_SIZE,\n        transition: 'opacity .5s linear',\n      }}\n    />\n  );\n};\n\nconst GroundTile = ({ variation, children }) => {\n  // Load the tile directly from the public folder\n  let tilesrc = new URL(`./ground-${variation}.png`, REF_URL).href;\n  return (\n    <div\n      style={{\n        backgroundImage: `url(${tilesrc})`,\n        display: 'inline-flex',\n        height: SPRITE_SIZE,\n        width: SPRITE_SIZE,\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default MapTile;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}