{"ast":null,"code":"/**\n * Retrieve a map message for a floor\n *\n * @param {*} floorNumber The floor number\n */\nexport default function endlessMapMessage(floorNumber) {\n  return dispatch => {\n    let message = false;\n    // check if we should show a message\n    switch (floorNumber + 1) {\n      case 20:\n        message = {\n          title: \"As <> marches onward, they notice the walls have a faint purple glow to them...\",\n          body: \"\\\"THE JOURNEY HAS JUST BEGUN\\\"\"\n        };\n        break;\n      case 40:\n        message = {\n          title: \"As <> nearly approaches the halfway point, they feel confident and charge forward!\",\n          body: ''\n        };\n        break;\n      case 60:\n        message = {\n          title: \"As <> turns the corner, now well past the halfway point, they hear the shadowy voice...\",\n          body: \"\\\"WELL DONE ADVENTURER... ONLY A LITTLE FURTHER\\\"\"\n        };\n        break;\n      case 80:\n        message = {\n          title: \"Now very close to the hundredth floor, <> can feel the darkness pulling them towards it as it appears to swirl on the walls.\",\n          body: ''\n        };\n        break;\n      case 100:\n        message = {\n          title: \"We didn't expect you to ACTUALLY make it this far.....\",\n          body: \"\\\"THE TRUTH IS... NOTHING... BUT OBLIVION LIES BEYOND THIS POINT..... WELCOME\\\"\"\n        };\n        break;\n      default:\n        return;\n    }\n    if (message) {\n      dispatch({\n        type: 'PAUSE',\n        payload: {\n          pause: true,\n          gameText: message\n        }\n      });\n    }\n  };\n}","map":{"version":3,"names":["endlessMapMessage","floorNumber","dispatch","message","title","body","type","payload","pause","gameText"],"sources":["C:/Users/devis/Downloads/react-rpg.com-master/src/features/map/random-map-gen/endless-map-message.jsx"],"sourcesContent":["/**\n * Retrieve a map message for a floor\n *\n * @param {*} floorNumber The floor number\n */\nexport default function endlessMapMessage(floorNumber) {\n  return (dispatch) => {\n    let message = false;\n    // check if we should show a message\n    switch (floorNumber + 1) {\n      case 20:\n        message = {\n          title: `As <> marches onward, they notice the walls have a faint purple glow to them...`,\n          body: `\"THE JOURNEY HAS JUST BEGUN\"`,\n        };\n        break;\n      case 40:\n        message = {\n          title: `As <> nearly approaches the halfway point, they feel confident and charge forward!`,\n          body: '',\n        };\n        break;\n      case 60:\n        message = {\n          title: `As <> turns the corner, now well past the halfway point, they hear the shadowy voice...`,\n          body: `\"WELL DONE ADVENTURER... ONLY A LITTLE FURTHER\"`,\n        };\n        break;\n      case 80:\n        message = {\n          title: `Now very close to the hundredth floor, <> can feel the darkness pulling them towards it as it appears to swirl on the walls.`,\n          body: '',\n        };\n        break;\n      case 100:\n        message = {\n          title: `We didn't expect you to ACTUALLY make it this far.....`,\n          body: `\"THE TRUTH IS... NOTHING... BUT OBLIVION LIES BEYOND THIS POINT..... WELCOME\"`,\n        };\n        break;\n      default:\n        return;\n    }\n\n    if (message) {\n      dispatch({\n        type: 'PAUSE',\n        payload: {\n          pause: true,\n          gameText: message,\n        },\n      });\n    }\n  };\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,iBAAiBA,CAACC,WAAW,EAAE;EACrD,OAAQC,QAAQ,IAAK;IACnB,IAAIC,OAAO,GAAG,KAAK;IACnB;IACA,QAAQF,WAAW,GAAG,CAAC;MACrB,KAAK,EAAE;QACLE,OAAO,GAAG;UACRC,KAAK,mFAAmF;UACxFC,IAAI;QACN,CAAC;QACD;MACF,KAAK,EAAE;QACLF,OAAO,GAAG;UACRC,KAAK,sFAAsF;UAC3FC,IAAI,EAAE;QACR,CAAC;QACD;MACF,KAAK,EAAE;QACLF,OAAO,GAAG;UACRC,KAAK,2FAA2F;UAChGC,IAAI;QACN,CAAC;QACD;MACF,KAAK,EAAE;QACLF,OAAO,GAAG;UACRC,KAAK,gIAAgI;UACrIC,IAAI,EAAE;QACR,CAAC;QACD;MACF,KAAK,GAAG;QACNF,OAAO,GAAG;UACRC,KAAK,0DAA0D;UAC/DC,IAAI;QACN,CAAC;QACD;MACF;QACE;IACJ;IAEA,IAAIF,OAAO,EAAE;MACXD,QAAQ,CAAC;QACPI,IAAI,EAAE,OAAO;QACbC,OAAO,EAAE;UACPC,KAAK,EAAE,IAAI;UACXC,QAAQ,EAAEN;QACZ;MACF,CAAC,CAAC;IACJ;EACF,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}